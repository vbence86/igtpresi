{
    "project": {
        "name": "Scratchomatic",
        "description": "Scratch-o-matic scratch card simulation library"
    },
    "files": {
        "Scratchomatic/scripts/uncompressed/CanvasText.js": {
            "name": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "modules": {
                "CanvasText": 1
            },
            "classes": {
                "CanvasText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/CanvasToolkit.js": {
            "name": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "modules": {
                "CanvasToolkit": 1
            },
            "classes": {
                "EasingFunctions": 1,
                "Point": 1,
                "CanvasToolkit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/ScratchController.js": {
            "name": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "modules": {},
            "classes": {
                "ScratchBrushTypes": 1,
                "ScratchGameTypes": 1,
                "ScratchAnimationTriggers": 1,
                "ScratchController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/ScratchMask.js": {
            "name": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "modules": {},
            "classes": {
                "ScratchMask": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/Symbol.js": {
            "name": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "modules": {},
            "classes": {
                "SymbolZIndices": 1,
                "Symbol": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/SymbolGroup.js": {
            "name": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "modules": {},
            "classes": {
                "SymbolGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/TimeLine.js": {
            "name": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "modules": {},
            "classes": {
                "TimeLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/game.js": {
            "name": "Scratchomatic/scripts/uncompressed/game.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/game_client.js": {
            "name": "Scratchomatic/scripts/uncompressed/game_client.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/game_loader.js": {
            "name": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/game_states.js": {
            "name": "Scratchomatic/scripts/uncompressed/game_states.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Scratchomatic/scripts/uncompressed/main.js": {
            "name": "Scratchomatic/scripts/uncompressed/main.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "CanvasText": {
            "name": "CanvasText",
            "submodules": {},
            "classes": {
                "CanvasText": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 1,
            "description": "Describes a factory object that writes formatted text to an offscreen canvas element using fillText.\n - Can then be used as an image source for an {{#crossLink \"Actor\"}}{{/crossLink}} or written directly to an onscreen canvas element.\n - Gives a performance improvement over using fillText every frame.\n - Includes functions for font preload detection."
        },
        "CanvasToolkit": {
            "name": "CanvasToolkit",
            "submodules": {},
            "classes": {
                "EasingFunctions": 1,
                "Point": 1,
                "CanvasToolkit": 1,
                "ScratchBrushTypes": 1,
                "ScratchGameTypes": 1,
                "ScratchAnimationTriggers": 1,
                "ScratchController": 1,
                "ScratchMask": 1,
                "SymbolZIndices": 1,
                "Symbol": 1,
                "SymbolGroup": 1,
                "TimeLine": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 1,
            "description": "Functions, shims and constants related to the HTML canvas element.\nRequired by the Canvas module, but useful without it.",
            "author": "Bob Moir on 06/03/2015."
        }
    },
    "classes": {
        "CanvasText": {
            "name": "CanvasText",
            "shortname": "CanvasText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasText",
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 1,
            "description": "Describes a factory object that writes formatted text to an offscreen canvas element using fillText.\n - Can then be used as an image source for an {{#crossLink \"Actor\"}}{{/crossLink}} or written directly to an onscreen canvas element.\n - Gives a performance improvement over using fillText every frame.\n - Includes functions for font preload detection.",
            "author": "Bob Moir on 18/06/2015.",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyle",
                            "description": "Fill colour to apply to stroke (i.e. text outline)",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidth",
                            "description": "Stroke width in pixels.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "baseHeightString",
                            "description": "A canvas element that is taller than any character must be created to measure the text height of a new CanvasText object. This is calculated by measuring the width of the baseHeightString setting and using that as the height. Normally this value never needs to be changed.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"WWW\""
                        },
                        {
                            "name": "measureHeightString",
                            "description": "This is the string that is written to the base canvas and used to measure the text height. It usually doesn't need to be changed unless a font has a particularly tall character or a game uses a reduced character set and you want to save some space.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"IQqgjiy|0123456789,\""
                        },
                        {
                            "name": "location",
                            "description": "The place in the document that generated text will be placed. Useful when converting values from px.",
                            "type": "HTMLElement",
                            "optional": true
                        }
                    ]
                }
            ],
            "is_constructor": 1
        },
        "EasingFunctions": {
            "name": "EasingFunctions",
            "shortname": "EasingFunctions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 197,
            "description": "Enum for the standard CSS easing functions to utilise when tweening. Custom easing functions can also be created by calling BezierEasing() directly."
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 240,
            "description": "Describes a point in cartesian space.",
            "params": [
                {
                    "name": "x",
                    "description": "X-Coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-Coordinate",
                    "type": "Number"
                }
            ],
            "is_constructor": 1
        },
        "CanvasToolkit": {
            "name": "CanvasToolkit",
            "shortname": "CanvasToolkit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 255,
            "description": "A collection of useful functions for manipulating and animating canvas elements and image data.",
            "type": "{{linearBezier: Function, radiansToDegrees: Function, degreesToRadians: Function, backingScale: Function, windowToCanvas: Function, canvasToCanvas: Function, wiggle: Function, lerp: Function, pointDistance: Function, collisionRect: Function, multiplyProperties: Function}}"
        },
        "ScratchBrushTypes": {
            "name": "ScratchBrushTypes",
            "shortname": "ScratchBrushTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 1,
            "description": "Enumeration type used to indicate the type of a scratch brush."
        },
        "ScratchGameTypes": {
            "name": "ScratchGameTypes",
            "shortname": "ScratchGameTypes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 22,
            "description": "Enumberation type used to indicate the win condition for a scratch game"
        },
        "ScratchAnimationTriggers": {
            "name": "ScratchAnimationTriggers",
            "shortname": "ScratchAnimationTriggers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 50,
            "description": "Enumeration class of animation sequence trigger ids. When a particular condition is met, the controller will fire callbacks that share the condition's id."
        },
        "ScratchController": {
            "name": "ScratchController",
            "shortname": "ScratchController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 173,
            "description": "A singleton class that manages active ScratchGames and their SymbolGroups",
            "author": "Bob Moir on 24/06/2015."
        },
        "ScratchMask": {
            "name": "ScratchMask",
            "shortname": "ScratchMask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 30,
            "author": "Bob Moir on 19/06/2015.",
            "extends": "PGCCollisionMask"
        },
        "SymbolZIndices": {
            "name": "SymbolZIndices",
            "shortname": "SymbolZIndices",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 1,
            "description": "Z Indices of different symbol components (allows you to draw stuff across symbols, e.g. the shine effect on lucky numbers)"
        },
        "Symbol": {
            "name": "Symbol",
            "shortname": "Symbol",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 15,
            "description": "A class that defines the unique aspects of a symbol that appears on a scratch card.",
            "author": "Bob Moir on 19/06/2015.",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "group",
                            "description": "Reference to the SymbolGroup that created this symbol",
                            "type": "SymbolGroup"
                        },
                        {
                            "name": "texMult",
                            "description": "Local copy of the texture multiplier.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "x",
                            "description": "X-Coordinate in the group.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "Y-Coordinate in the group.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "width",
                            "description": "Width of the symbol in px.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "Height of the symbol in px.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "backgroundObj",
                            "description": "Image used to draw the back of the symbol.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "value",
                            "description": "Symbol value as a string.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "valueObj",
                            "description": "Symbol value as a text image.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "prize",
                            "description": "Symbol prize as a string.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "prizeObj",
                            "description": "Symbol prize as a text image.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "specialObjs",
                            "description": "Any additional PGCImage objects used by the symbol (e.g. particles, animated content)",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "foilImage",
                            "description": "The canvas used to draw the foil for this symbol, wrapped in a PGCImage.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "foilContext",
                            "description": "Reference to the 2d context of the foilImage's canvas.",
                            "type": "CanvasRenderingContext2d",
                            "optional": true
                        },
                        {
                            "name": "scratchSprite",
                            "description": "The sprite used to automatically scratch the symbol.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "scratchBBox",
                            "description": "} The area of the symbol that must be uncovered for this symbol to count as scratched.",
                            "type": "X: Number, y: Number, w: Number, h: Number",
                            "optional": true
                        },
                        {
                            "name": "prizeSymbol",
                            "description": "Flag indicating that this symbol is a prize symbol",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        }
                    ]
                }
            ],
            "is_constructor": 1
        },
        "SymbolGroup": {
            "name": "SymbolGroup",
            "shortname": "SymbolGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1,
            "description": "Describes a canvas that contains several scratchable Symbols\nProperties / Roles:\n - Symbol positions\n - Maintaining the foil including effects (e.g. animation)",
            "author": "Bob Moir on 15/06/2015.",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "container",
                            "description": "Reference to the DOM element that contains the group's canvas.",
                            "type": "HTMLElement"
                        },
                        {
                            "name": "width",
                            "description": "Width of the group's canvas in px.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "height",
                            "description": "Height of the group's canvas in px.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "fitMode",
                            "description": "",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " pgc.CanvasFitModes.SCALE"
                        },
                        {
                            "name": "gutter",
                            "description": "If this value > 0, the group's canvas will extend past the bounds of its container by this number of px on all sides, while remaining centred on the container. This is useful when effects (e.g. particles) overlap the edges of the container.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "unifiedScaling",
                            "description": "Setting this to true will compare the scaling of the value and prize sprites on all symbols and apply the smallest of each setting to all sprites of that type (i.e. if maxWidth is applied to values and this flag is set, all value sprites will have the smallest scaling factor)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "disableScratch",
                            "description": "Set this to true to disable scratch effects.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "disableInput",
                            "description": "Set this to true to disable all input to the group.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "fillEmpty",
                            "description": "Set this to true to create symbols even when no input value/prize pair is provided.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        }
                    ]
                }
            ]
        },
        "TimeLine": {
            "name": "TimeLine",
            "shortname": "TimeLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CanvasToolkit",
            "namespace": "",
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 1,
            "description": "Describes a list of callbacks that are fired at specific times after a starting point. Improves on the PGCContainer timeline implementation.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 66,
            "description": "Writes the given string to a canvas using the current format settings",
            "itemtype": "method",
            "name": "writeToCanvas",
            "params": [
                {
                    "name": "string",
                    "description": "The text to write",
                    "type": "String"
                },
                {
                    "name": "canvas",
                    "description": "The canvas to write it to",
                    "type": "HTMLCanvasElement"
                }
            ],
            "return": {
                "description": "the edited canvas",
                "type": "HTMLCanvasElement"
            },
            "access": "private",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 133,
            "description": "Converts a non-px font size string (e.g. pt, em) to the value in px, for use in lineWidths etc.",
            "params": [
                {
                    "name": "size",
                    "description": "Font size and units as a string (e.g. \"5pt\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Font size in px.",
                "type": "Number"
            },
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 169,
            "description": "Puts all font options together into a string to assign to the canvas",
            "access": "private",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 181,
            "description": "Sets the font family to use when creating the text image.",
            "itemtype": "method",
            "name": "setFontFamily",
            "params": [
                {
                    "name": "fontFamily",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 194,
            "description": "Sets the font size to use when creating the text image.",
            "itemtype": "method",
            "name": "setFontSize",
            "params": [
                {
                    "name": "fontSize",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 207,
            "description": "Sets the font style to use when creating the text image.",
            "itemtype": "method",
            "name": "setFontStyle",
            "params": [
                {
                    "name": "fontStyle",
                    "description": ""
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 220,
            "description": "Sets the font style to use when creating the text image.",
            "itemtype": "method",
            "name": "setFontWeight",
            "params": [
                {
                    "name": "fontWeight",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 233,
            "description": "Sets the font style to use when creating the text image.",
            "itemtype": "method",
            "name": "setFontVariant",
            "params": [
                {
                    "name": "fontVariant",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 246,
            "description": "Sets the fill style (i.e. text colour) to use when creating the text image.",
            "itemtype": "method",
            "name": "setFillStyle",
            "params": [
                {
                    "name": "fillStyle",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 258,
            "description": "Sets the string to use when setting the height of the test canvas during text height measurement. This should not be called unless measuring a font that is at least 3 times as tall as it is wide.",
            "itemtype": "method",
            "name": "setBaseHeightString",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 271,
            "description": "Sets the text shadow to apply when creating the text image.",
            "itemtype": "method",
            "name": "setShadow",
            "params": [
                {
                    "name": "colour",
                    "description": "Shadow colour.",
                    "type": "String"
                },
                {
                    "name": "blur",
                    "description": "Shadow blur amount.",
                    "type": "Number"
                },
                {
                    "name": "offsetX",
                    "description": "Horizontal shadow offset.",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "Vertical shadow offset.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 294,
            "description": "Adds a stroke/outline to the text.",
            "itemtype": "method",
            "name": "addStroke.",
            "params": [
                {
                    "name": "style",
                    "description": "strokeStyle property to apply.",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "lineWidth property to apply.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 309,
            "description": "Remove an outline from the object. This is probably only useful for debug..",
            "itemtype": "method",
            "name": "removeStroke.",
            "params": [
                {
                    "name": "style",
                    "description": "Stroke style to remove from the text image.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 326,
            "description": "A laborious function for accurately measuring text height - far more expensive than it should be.",
            "itemtype": "method",
            "name": "measureTextHeight",
            "params": [
                {
                    "name": "string",
                    "description": "Sample string used to measure the height (retained between calls; has a default value).",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "Text height in px.",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 386,
            "description": "Given a string, writes it to the object canvas and returns a copy.",
            "itemtype": "method",
            "name": "createTextImage",
            "params": [
                {
                    "name": "string",
                    "description": "Text to convert to an image",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An offscreen canvas element containing the text",
                "type": "HTMLCanvasElement"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 417,
            "description": "Takes a text configuration and uses it to modify the existing settings for this object.\nText height re-measurement will only occur if it is necessary.",
            "itemtype": "method",
            "name": "modify",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyle",
                            "description": "Fill colour to apply to stroke (i.e. text outline)",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidth",
                            "description": "Stroke width in pixels.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "baseHeightString",
                            "description": "A canvas element that is taller than any character must be created to measure the text height of a new CanvasText object. This is calculated by measuring the width of the baseHeightString setting and using that as the height. Normally this value never needs to be changed.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"WWW\""
                        },
                        {
                            "name": "measureHeightString",
                            "description": "This is the string that is written to the base canvas and used to measure the text height. It usually doesn't need to be changed unless a font has a particularly tall character or a game uses a reduced character set and you want to save some space.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"IQqgjiy|0123456789,\""
                        }
                    ]
                }
            ],
            "return": {
                "description": "The CanvasText object, so functions can be chained.",
                "type": "CanvasText"
            },
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasText.js",
            "line": 492,
            "description": "Returns a \"deep\" copy of this Object, with no shared references. This is useful when text varies only slightly in style, e.g when using different skins, or multiple text sizes.",
            "itemtype": "method",
            "name": "clone",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "",
                "type": "CanvasText"
            },
            "class": "CanvasText",
            "module": "CanvasText"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 66,
            "description": "Uses a cubic bezier curve to create a transition easing function.\n - Based on Firefox's nsSMILKeySpline.cpp\n - Easing concepts from <a href=\"http://greweb.me/2012/02/bezier-curve-based-easing-functions-from-concept-to-implementation/\">here</a>.\n - Code 'borrowed' from <a href=\"https://github.com/gre/bezier-easing\">here</a>.",
            "example": [
                "\n     var spline = BezierEasing(0.25, 0.1, 0.25, 1.0);\n spline(x) => returns the easing value | x must be in [0, 1] range"
            ],
            "itemtype": "method",
            "name": "BezierEasing",
            "author": "Darren Beukes, 2014",
            "params": [
                {
                    "name": "mX1",
                    "description": "X-Coordinate of the first handle point. Must be between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "mY1",
                    "description": "Y-Coordinate of the first handle point. Must be between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "mX2",
                    "description": "X-Coordinate of the second handle point. Must be between 0 and 1.",
                    "type": "Number"
                },
                {
                    "name": "mY2",
                    "description": "Y-Coordinate of the second handle point. Must be between 0 and 1.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A cubic bezier curve function of the type function(progress), where progress is a value between 0 and 1.",
                "type": "Function"
            },
            "class": "EasingFunctions",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 202,
            "description": "Specifies a transition effect with the same speed from start to end.",
            "itemtype": "property",
            "name": "LINEAR",
            "final": 1,
            "type": "Function",
            "class": "EasingFunctions",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 209,
            "description": "Specifies a transition effect with a slow start, then fast, then slow end.",
            "itemtype": "property",
            "name": "EASE",
            "final": 1,
            "type": "Function",
            "class": "EasingFunctions",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 216,
            "description": "Specifies a transition effect with a slow start.",
            "itemtype": "property",
            "name": "EASE_IN",
            "final": 1,
            "type": "Function",
            "class": "EasingFunctions",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 223,
            "description": "Specifies a transition effect with a slow end.",
            "itemtype": "property",
            "name": "EASE_OUT",
            "final": 1,
            "type": "Function",
            "class": "EasingFunctions",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 230,
            "description": "Specifies a transition effect with a slow start and end.",
            "itemtype": "property",
            "name": "EASE_IN_OUT",
            "final": 1,
            "type": "Function",
            "class": "EasingFunctions",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 261,
            "description": "Returns the dimensions of a rectangular grid given the contained squares' widths, heights and the padding between each square",
            "params": [
                {
                    "name": "rows",
                    "description": "Number of items per column",
                    "type": "Number|Array"
                },
                {
                    "name": "columns",
                    "description": "Number of items per row",
                    "type": "Number|Array"
                },
                {
                    "name": "width",
                    "description": "Item width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "Item height",
                    "type": "Number"
                },
                {
                    "name": "innerPadding",
                    "description": "amount of padding between items {row: {Number}, column: {Number}}",
                    "type": "Object|Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 279,
            "params": [
                {
                    "name": "rows",
                    "description": "Number of items per column",
                    "type": "Number|Array"
                },
                {
                    "name": "columns",
                    "description": "Number of items per row",
                    "type": "Number|Array"
                },
                {
                    "name": "dimensions",
                    "description": "width and height of the scene {w: {Number}, h: {Number}}",
                    "type": "Object"
                },
                {
                    "name": "outerPadding",
                    "description": "Amount of padding around the outside of the grid {left: {Number}, right: {Number}, top: {Number}, bottom: {Number}}",
                    "type": "Object|Array",
                    "optional": true
                }
            ],
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 302,
            "description": "Helper method which applies a linear bezier tweening to the supplied variable",
            "itemtype": "method",
            "name": "linearBezier",
            "params": [
                {
                    "name": "p1",
                    "description": "The starting point of the animation",
                    "type": "Number"
                },
                {
                    "name": "p2",
                    "description": "The end point of the animation",
                    "type": "Number"
                },
                {
                    "name": "t",
                    "description": "The total running time of this animation",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the tweened attribute",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 315,
            "description": "Takes a number in radians and converts it to degrees",
            "itemtype": "method",
            "name": "radiansToDegrees",
            "params": [
                {
                    "name": "radians",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 326,
            "description": "Takes a number in degrees and converts it to radians",
            "itemtype": "method",
            "name": "degreesToRadians",
            "params": [
                {
                    "name": "degrees",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 338,
            "description": "Finds the backing scaled used on the current context.",
            "itemtype": "method",
            "name": "backingScale",
            "params": [
                {
                    "name": "context",
                    "description": "The context to use to check the backing scale.",
                    "type": "CanvasRenderingContext2D"
                }
            ],
            "return": {
                "description": "Backing scale ratio, clamped to 1 or 2.",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 377,
            "description": "Converts window coordinates to canvas coordinates.",
            "itemtype": "method",
            "name": "windowToCanvas",
            "params": [
                {
                    "name": "canvas",
                    "description": "Reference to the canvas element.",
                    "type": "HTMLCanvasElement"
                },
                {
                    "name": "x",
                    "description": "X-coordinate to convert.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate to convert.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Converted x and y coordinates in a Point.",
                "type": "X: number, y: number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 395,
            "description": "Converts canvas coordinates to window coordinates.",
            "itemtype": "method",
            "name": "canvasToWindow",
            "params": [
                {
                    "name": "canvas",
                    "description": "Reference to the canvas element.",
                    "type": "HTMLCanvasElement"
                },
                {
                    "name": "x",
                    "description": "X-coordinate to convert.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate to convert.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Converted x and y coordinates in a Point.",
                "type": "X: number, y: number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 413,
            "description": "Converts one canvas' coordinates to another canvas' coordinates.",
            "itemtype": "method",
            "name": "canvasToCanvas",
            "params": [
                {
                    "name": "canvas1",
                    "description": "Reference to the source canvas element.",
                    "type": "HTMLCanvasElement"
                },
                {
                    "name": "x",
                    "description": "X-coordinate to convert.",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate to convert.",
                    "type": "Number"
                },
                {
                    "name": "canvas2",
                    "description": "Reference to the destination canvas element.",
                    "type": "HTMLCanvasElement"
                }
            ],
            "return": {
                "description": "} Converted x and y coordinates in a Point.",
                "type": "X: number, y: number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 428,
            "description": "Given a \"container\" html element and a pixel amount, returns the pixel amount converted to ems, such that an element placed in the container will be styled the same as if the pixel amount was used.\nThis is useful for styling elements that may change position depending on the",
            "itemtype": "method",
            "name": "pixelsToEms",
            "params": [
                {
                    "name": "container",
                    "description": "The element that contains the pixel value we want to convert",
                    "type": "HTMLElement"
                },
                {
                    "name": "pixelAmount",
                    "description": "The pixel amount as a number or as a string (e.g. \"10px\")",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 443,
            "description": "Adds or subtracts a random amount from value that is no greater than value * wiggleFactor",
            "itemtype": "method",
            "name": "wiggle",
            "params": [
                {
                    "name": "wiggleFactor",
                    "description": "Max wiggle amount expressed as a ratio",
                    "type": "Number"
                },
                {
                    "name": "value",
                    "description": "Value to apply wiggle to",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The value, wiggled.",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 456,
            "description": "Performs a simple linear interpolation between two points",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "source",
                    "description": "The starting point",
                    "type": "Object"
                },
                {
                    "name": "destination",
                    "description": "End point",
                    "type": "Object"
                },
                {
                    "name": "progress",
                    "description": "A number between 0 and 1 indicating which point to return between source (0) and destination (1)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} The point between the two initial points",
                "type": "X: number, y: number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 473,
            "description": "Returns the distance between two points",
            "itemtype": "method",
            "name": "pointDistance",
            "params": [
                {
                    "name": "point1",
                    "description": "First point.",
                    "type": "Point"
                },
                {
                    "name": "point2",
                    "description": "Second point.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "Absolute distance between the two points.",
                "type": "Number"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 490,
            "description": "Given a line defined by two points, gives the distance to a third point\nhttp://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line",
            "itemtype": "method",
            "name": "lineToPointDist",
            "params": [
                {
                    "name": "lStart",
                    "description": "Starting point of the line",
                    "type": "Point"
                },
                {
                    "name": "lEnd",
                    "description": "End point of the line",
                    "type": "Point"
                },
                {
                    "name": "point",
                    "description": "Point to find the distance to",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 505,
            "description": "Given a line defined by two points and a third point, returns the point along the line that is closest to the third point\nhttp://stackoverflow.com/questions/3120357/get-closest-point-to-a-line\nhttp://en.wikipedia.org/wiki/Line%E2%80%93line_intersection",
            "params": [
                {
                    "name": "lStart",
                    "description": "Starting point of the line",
                    "type": "Point"
                },
                {
                    "name": "lEnd",
                    "description": "End point of the line",
                    "type": "Point"
                },
                {
                    "name": "point",
                    "description": "Point to find the closest point to",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "",
                "type": "Point"
            },
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 526,
            "description": "Given two points on each of two lines, gives the point of intersection between those lines\nReturns null when lines are parallel or coincident\nhttp://en.wikipedia.org/wiki/Line-line_intersection#Intersection_of_two_lines",
            "itemtype": "method",
            "name": "pointOfIntersection",
            "params": [
                {
                    "name": "lStart1",
                    "description": "Starting point of line 1",
                    "type": "Point"
                },
                {
                    "name": "lEnd1",
                    "description": "End point of line 1",
                    "type": "Point"
                },
                {
                    "name": "lStart2",
                    "description": "Starting point of line 2",
                    "type": "Point"
                },
                {
                    "name": "lEnd2",
                    "description": "End point of line 2",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "|null",
                "type": "Point"
            },
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 559,
            "description": "Checks if two rectangles or bounding boxes intersect",
            "itemtype": "method",
            "name": "collisionRect",
            "params": [
                {
                    "name": "}",
                    "description": "R1 First rectangle.",
                    "type": "X: Number, y: Number, w: Number, h: Number"
                },
                {
                    "name": "}",
                    "description": "R2 Second rectangle.",
                    "type": "X: Number, y: Number, w: Number, h: Number"
                }
            ],
            "return": {
                "description": "True if the two rectangles touch at any point.",
                "type": "Boolean"
            },
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 580,
            "description": "Applies a multiplier to all numerical properties in an array of objects. Useful for updating frame data for retina assets",
            "itemtype": "method",
            "name": "multiplyProperties",
            "params": [
                {
                    "name": "array",
                    "description": "Object array",
                    "type": "Array"
                },
                {
                    "name": "by",
                    "description": "Amount to multiply properties by",
                    "type": "Number"
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 604,
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "code",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "WebGLShader"
            },
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/CanvasToolkit.js",
            "line": 632,
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "WebGLRenderingContext"
                },
                {
                    "name": "vertex",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fragment",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "CanvasToolkit",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 6,
            "description": "Brushes of this type are drawn to the foil using the \"destination-out\" globalCompositeOperation, effectively erasing the foil.",
            "itemtype": "property",
            "name": "SCRATCH",
            "final": 1,
            "type": "Number",
            "class": "ScratchBrushTypes",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 13,
            "description": "Brushes of this type trigger the automatic scratch animation on any symbol they touch.",
            "itemtype": "property",
            "name": "WAND",
            "final": 1,
            "type": "Number",
            "class": "ScratchBrushTypes",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 27,
            "description": "Games of this type will trigger a win animation when EACH symbol in the combination is uncovered - BUT only if the lucky number is also uncovered.",
            "itemtype": "property",
            "name": "LUCKY_NUMBERS",
            "final": 1,
            "type": "Number",
            "class": "ScratchGameTypes",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 34,
            "description": "Games of this type will trigger a win animation when ALL symbols in the combination are uncovered. Note that this includes instant win symbols - these are effectively a \"match 1\" game.",
            "propert": "MATCH_X",
            "final": 1,
            "type": "Number",
            "class": "ScratchGameTypes",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 41,
            "description": "Games of this type never trigger a win animation. Used to display completed games (e.g. Advent)",
            "propert": "DISPLAY",
            "final": 1,
            "type": "Number",
            "class": "ScratchGameTypes",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 55,
            "description": "Met when the game starts.",
            "itemtype": "property",
            "name": "START",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 62,
            "description": "Met when the",
            "itemtype": "property",
            "name": "START",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 69,
            "description": "Met when a symbol is revealed.",
            "itemtype": "property",
            "name": "SCRATCHED",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 76,
            "description": "Met when a symbol is revealed to be a winner.",
            "itemtype": "property",
            "name": "WIN",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 83,
            "description": "Met when all the symbols of a group have been scratched.",
            "itemtype": "property",
            "name": "ALL_SCRATCHED",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 90,
            "description": "Met when all the symbols are scratched in all the SymbolGroups in a game.",
            "itemtype": "property",
            "name": "GAME_OVER",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 97,
            "description": "Copy of the GAME_OVER trigger. 11% saving on keystrokes!",
            "itemtype": "property",
            "name": "GAMEOVER",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 104,
            "description": "Met when the user taps a foil. This blocks the normal {Symbol}.animateScratch() call.",
            "itemtype": "property",
            "name": "TAP_INTERRUPT",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 111,
            "description": "Triggered explicitly by the user.",
            "itemtype": "property",
            "name": "CUSTOM00, CUSTOM01, CUSTOM02",
            "final": 1,
            "type": "Number",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 122,
            "description": "Enumeration type used to set the interaction between a SymbolGroup canvas and its containing element when the container is resized.",
            "type": "{Object}",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 127,
            "description": "With this mode, the canvas is scaled to fit into the container by setting the canvas.style.width and canvas.style.height. (Default)",
            "itemtype": "property",
            "name": "SCALE",
            "final": 1,
            "type": "{Number}",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 134,
            "description": "With this mode, the canvas is resized to have the same dimensions as its container.",
            "itemtype": "property",
            "name": "RESIZED",
            "final": 1,
            "type": "{Number}",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 141,
            "description": "With this mode, the canvas is never scaled or resized to fit its container.",
            "itemtype": "property",
            "name": "NONE",
            "final": 1,
            "type": "{Number}",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 150,
            "description": "Stores any settings/constants used in scratchomatic",
            "type": "{Object}",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 155,
            "description": "String used to separate the values in a multi-symbol(e.g. JackpotScratchCard).",
            "itemtype": "property",
            "name": "MULTI_SYMBOL_DELIMITER",
            "final": 1,
            "type": "{String}",
            "class": "ScratchAnimationTriggers",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 220,
            "description": "Calls the step function on each SymbolGroup in the list. Handles the requestAnimationFrame call",
            "itemtype": "method",
            "name": "step",
            "access": "private",
            "tagname": "",
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 283,
            "description": "Treats an array of SymbolGroups as one large group and returns the reference to the symbol that would have the provided index.",
            "itemtype": "method",
            "name": "getSymbolRefsFromGroups",
            "params": [
                {
                    "name": "groupArray",
                    "description": "An array of SymbolGroups, ordered the same way as they were populated.",
                    "type": "Array"
                },
                {
                    "name": "groupSettings",
                    "description": "An array of objects containing various settings",
                    "type": "Array"
                },
                {
                    "name": "symbolIndex",
                    "description": "Index number that the symbol would have if all the symbols were n the same group.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "[Symbol]"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 323,
            "description": "Checks a partially populated group for empty positions and returns the first empty index.",
            "itemtype": "method",
            "name": "getNextPosition",
            "params": [
                {
                    "name": "group",
                    "description": "",
                    "type": "SymbolGroup"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 338,
            "description": "Populates a game with new symbol values from the server response",
            "itemtype": "method",
            "name": "populate",
            "params": [
                {
                    "name": "config",
                    "description": "Game config object to use.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "gameType",
                            "description": "",
                            "type": "ScratchGameTypes"
                        },
                        {
                            "name": "userFoilsGroups",
                            "description": "SymbolGroup to populate from the userFoils object",
                            "type": "SymbolGroup",
                            "optional": true
                        },
                        {
                            "name": "playFieldsGroups",
                            "description": "SymbolGroup to populate from the playFields object",
                            "type": "SymbolGroup",
                            "optional": true
                        },
                        {
                            "name": "bonusPrizesGroups",
                            "description": "SymbolGroup to populate from the bonusPrizes object",
                            "type": "SymbolGroup",
                            "optional": true
                        },
                        {
                            "name": "scardIndex",
                            "description": "Index of the \"scards\" array to use when populating from the server response",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "gameIndex",
                            "description": "Index of the \"game\" array to use when populating from the server response",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "userFoils",
                            "description": "). If defined, replaces the server response data with custom data.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " pgc.Game.Server.Response.scards[config.scardIndex].games[config.gameIndex].userFoils]  Value data {Lucky numbers - format: [...String"
                        },
                        {
                            "name": "playFields",
                            "description": "). If defined, replaces the server response data with custom data.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " pgc.Game.Server.Response.scards[config.scardIndex].games[config.gameIndex].playFields]  Prize and value data (Most symbols - format: [...{value: String, prize: String}"
                        },
                        {
                            "name": "bonusPrizes",
                            "description": "). If defined, replaces the server response data with custom data.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " pgc.Game.Server.Response.scards[config.scardIndex].games[config.gameIndex].bonusPrizes]  Prize data {Bonus zone - format: [...String"
                        },
                        {
                            "name": "winningCombinations",
                            "description": ". Symbols combinations that constitute a win. If defined, replaces the server response data with custom data.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": " pgc.Game.Server.Response.scards[config.scardIndex].games[config.gameIndex].winningCombinations"
                        },
                        {
                            "name": "userFoilsSettings",
                            "description": "Settings from last population of this game. used by repopulate.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "playFieldsSettings",
                            "description": "Settings from last population of this game. used by repopulate.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "bonusPrizesSettings",
                            "description": "Settings from last population of this game. used by repopulate.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 494,
            "itemtype": "method",
            "name": "eventHandler",
            "params": [
                {
                    "name": "event",
                    "description": "reference to the calling event",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 603,
            "description": "Returns the current texture multiplier value.",
            "itemtype": "method",
            "name": "getTextureMultiplier",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 612,
            "itemtype": "method",
            "name": "getWinningSymbols",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 621,
            "description": "Sets the maximum time period between a touchstart/mousedown and a touchend/mouseup event that can be considered a \"tap\". Increasing the number will increase tap sensitivity.",
            "itemtype": "method",
            "name": "setTapTime",
            "params": [
                {
                    "name": "tapTime",
                    "description": "Max time period in ms that counts as a \"tap\"",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "ScratchController"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 632,
            "description": "Sets the sprite used to erase the foil from Symbols during a scratch operation. Brushsprites erase the foil by being drawn to it using the \"destination-out\" globalCompositeOperation.",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "brushType",
                            "description": "The type of brush to set this to",
                            "type": "ScratchBrushType"
                        },
                        {
                            "name": "brushSprite",
                            "description": "Sprite/image used to erase the foil",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "scaling",
                            "description": "Scratch brush scale. Can be useful if the brush sprite is too small or large, for example in cases where the SymbolGroup is zoomed in.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "ScratchController"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 650,
            "description": "Sets the _autoGameOver internal flag. When this is true, games will end automatically when all symbols are scratched.",
            "itemtype": "method",
            "name": "setAutoGameOver",
            "params": [
                {
                    "name": "autoGameOver",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "ScratchController"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 665,
            "description": "given a single item, returns that item",
            "itemtype": "method",
            "name": "skinSelect",
            "params": [
                {
                    "name": "sourceObj",
                    "description": "Either an array or a single item",
                    "type": "Object|Array|Number|string"
                }
            ],
            "return": {
                "description": "The selected item",
                "type": "Object"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 684,
            "description": "Initialises a new scratch card game, adding the SymbolGroups to the web page, populating them with symbols and adding them to the render and update loops.",
            "itemtype": "method",
            "name": "initialiseGame",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "gameType",
                            "description": "",
                            "type": "ScratchGameTypes"
                        },
                        {
                            "name": "scardIndex",
                            "description": "Index of the \"scards\" array that contains this game's response (pgc.Game.Server.Response.scards)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "gameIndex",
                            "description": ".games)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0]  Index of the \"games\" array that contains this game's response (pgc.Game.Server.Response.scards[scardIndex"
                        },
                        {
                            "name": "userFoilsGroups",
                            "description": "Reference to the SymbolGroup that is populated by the userFoils (lucky numbers).",
                            "type": "SymbolGroup|Array",
                            "optional": true
                        },
                        {
                            "name": "playFieldsGroups",
                            "description": "Reference to the SymbolGroup that is populated by the playFields (main scratch zone).",
                            "type": "SymbolGroup|Array",
                            "optional": true
                        },
                        {
                            "name": "bonusPrizesGroups",
                            "description": "Reference to the SymbolGroup that is populated by the bonusPrizes (This only applies to the bonus game in Pengedryss Neon)",
                            "type": "SymbolGroup|Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The config object",
                "type": "Object"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 725,
            "description": "Ends the game. This can be used to end the game when the auto game over option is set.",
            "itemtype": "method",
            "name": "gameOver",
            "params": [
                {
                    "name": "noTrigger ",
                    "description": "Set true to skip triggering the gameover animation sequence",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": " false"
                }
            ],
            "return": {
                "description": "",
                "type": "ScratchController"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 751,
            "description": "Searches the active scratch games for the game with the configuration matching oldConfig, and updates its settings using newConfig.",
            "itemtype": "method",
            "name": "modifyGameConfig",
            "params": [
                {
                    "name": "oldConfig",
                    "description": "Configuration object for the game you wish to modify. This should be an Object reference that was returned by the initialiseGame function.",
                    "type": "Object"
                },
                {
                    "name": "newConfig",
                    "description": "Configuration object containing the properties you wish to modify.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "scardIndex",
                            "description": "Index of the \"scards\" array that contains this game's response (pgc.Game.Server.Response.scards)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "gameIndex",
                            "description": ".games)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0]  Index of the \"games\" array that contains this game's response (pgc.Game.Server.Response.scards[scardIndex"
                        },
                        {
                            "name": "userFoilsGroups",
                            "description": "Reference to the SymbolGroup that is populated by the userFoils (lucky numbers).",
                            "type": "SymbolGroup|Array",
                            "optional": true
                        },
                        {
                            "name": "playFieldsGroups",
                            "description": "Reference to the SymbolGroup that is populated by the playFields (main scratch zone).",
                            "type": "SymbolGroup|Array",
                            "optional": true
                        },
                        {
                            "name": "bonusPrizesGroups",
                            "description": "Reference to the SymbolGroup that is populated by the bonusPrizes (This only applies to the bonus game in Pengedryss Neon)",
                            "type": "SymbolGroup|Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The updated gameConfig object",
                "type": "Object"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 778,
            "description": "Removes all games from the game config list.",
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 785,
            "description": "Populates all the games with new symbols from the server response",
            "itemtype": "method",
            "name": "startNewGame",
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 820,
            "description": "Helper function to partially overwrite a scratchCard's content and/or refresh the scratchcard to its initial state.",
            "itemtype": "method",
            "name": "repopulate",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "gameConfig",
                            "description": "The config for the game that you want to repopulate",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "scardIndex",
                            "description": "Scratch Card index to set the game to",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "gameIndex",
                            "description": "Game index to set the game to",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userFoils]  Value data {Lucky numbers - format: [...String",
                            "description": ").",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "playFields]  Prize and value data (Most symbols - format: [...{value: String, prize: String}",
                            "description": ").",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "bonusPrizes]  Prize data {Bonus zone - format: [...String",
                            "description": ").",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "winningCombinations",
                            "description": ". Symbols combinations that constitute a win.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "public",
            "tagname": "",
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 867,
            "description": "Helper function. Given an array of file names, returns an array of PGCImages to use as scratching masks.",
            "params": [
                {
                    "name": "toolSources",
                    "description": "The filenames of the brush masks",
                    "type": "Array"
                }
            ],
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 886,
            "description": "Adds a PGCScene to the render queue",
            "itemtype": "method",
            "name": "addExtraScene",
            "params": [
                {
                    "name": "scene",
                    "description": "The scene to add to the render queue",
                    "type": "PGCScene"
                }
            ],
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 896,
            "description": "Removes a PGCScene from the render queue",
            "itemtype": "method",
            "name": "removeExtraScene",
            "params": [
                {
                    "name": "scene",
                    "description": "The scene to remove from the render queue",
                    "type": "PGCScene"
                }
            ],
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 906,
            "description": "Utility function. Takes any config object (text or sprite), makes a copy and returns the copy with the texture multiplier applied to any properties that relate to texture coordinates.",
            "itemtype": "method",
            "name": "multiplyConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchController.js",
            "line": 948,
            "description": "Helper function. Creates a PGCSprite to add to any extra scenes, applying the texture multiplier to the input values",
            "itemtype": "method",
            "name": "createSprite",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "x",
                            "description": "Horizontal position of the sprite.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "y",
                            "description": "Vertical position of the sprite.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 100"
                        },
                        {
                            "name": "visible",
                            "description": "Starting visibility.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "zIndex",
                            "description": "Z-Index of the sprite on the symbol",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " SymbolZIndices.SPRITE"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "PGCSprite"
            },
            "class": "ScratchController",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 1,
            "description": "Ratio of scratched mask rectangles allowed before a symbol counts as scratched (e.g. 0.6 = 60% scratched)",
            "itemtype": "property",
            "name": "ScratchMaskConfig",
            "type": "{Number}",
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 7,
            "description": "Percentage of the mask rectangles that must be collided with for the symbol to be considered scratched. Expressed as a ratio.",
            "itemtype": "property",
            "name": "SCRATCHED_THRESHOLD",
            "final": 1,
            "type": "Number",
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 14,
            "description": "max height in pixels of each collision rectangle in a ScratchMask.",
            "itemtype": "property",
            "name": "SCRATCH_MASK_RECT_HEIGHT",
            "final": 1,
            "type": "Number",
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 21,
            "description": "max width in pixels of each collision rectangle in a ScratchMask.",
            "itemtype": "property",
            "name": "SCRATCH_MASK_RECT_WIDTH",
            "final": 1,
            "type": "Number",
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 36,
            "description": "Creates a mask object given a scratch_bBox object",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "scratch_bBox",
                    "description": "the area to detect scratches on",
                    "type": "Object"
                }
            ],
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 51,
            "description": "Checks for collisions but remembers the rectangles that have been collided with",
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 63,
            "description": "Returns true when a given percentage of the mask is scratched",
            "itemtype": "method",
            "name": "scratched",
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 78,
            "description": "Wrapper on the parent function that allows for use of centre-anchored coordinates",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "x",
                    "description": "X-Coordinate of the centre of the symbol",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-Cordinate of the centre of the symbol",
                    "type": "Number"
                }
            ],
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/ScratchMask.js",
            "line": 90,
            "description": "Forces the 'scratched' setting on this mask.",
            "params": [
                {
                    "name": "scratched",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "ScratchMask",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 75,
            "description": "Given the name of a part of the symbol, returns the object reference.",
            "itemtype": "method",
            "name": "getPartByName",
            "params": [
                {
                    "name": "partName",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "PGCImage"
            },
            "access": "private",
            "tagname": "",
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 102,
            "description": "Crops the Symbol part so it fits under the foil.",
            "itemtype": "method",
            "name": "cropToFoil",
            "params": [
                {
                    "name": "part",
                    "description": "The Symbol part to crop.",
                    "type": "PGCImage"
                }
            ],
            "return": {
                "description": "The cropped part.",
                "type": "PGCImage"
            },
            "access": "private",
            "tagname": "",
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 141,
            "description": "Uncrops a part that was previously cropped to the foil. Passes through parts that were never cropped.",
            "params": [
                {
                    "name": "part",
                    "description": "The cropped symbol part"
                }
            ],
            "return": {
                "description": "The uncropped part",
                "type": "PGCImage"
            },
            "access": "private",
            "tagname": "",
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 162,
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "X-Coordinate of the centre of the symbol",
                "type": "Number"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 170,
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "Y-Coordinate of the centre of the symbol",
                "type": "Number"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 178,
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 186,
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 194,
            "description": "Sets the X and Y coordinates of the symbol",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "x",
                    "description": "X-Coordinate of the centre of the symbol",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-Coordinate of the centre of the symbol",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained.",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 209,
            "description": "Gets the tap-sensitive bounding box of this symbol, expressed as the coordinates of the symbol's top-left corner, its width and its height.",
            "return": {
                "description": "}",
                "type": "X: Number, y: Number, w: Number, h: Number"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 226,
            "description": "Sets a custom bounding box for registering tap events",
            "itemtype": "method",
            "name": "setTouchBBox",
            "params": [
                {
                    "name": "offsetX",
                    "description": "horizontal distance from the centre point to the top left corner of the bounding box",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "vertical distance from the centre point to the top left corner of the bounding box",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "width",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "height",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 247,
            "description": "Gets the scratch-sensitive bounding box of this symbol, expressed as the coordinates of the symbol's top-left corner, its width and its height.",
            "return": {
                "description": "}",
                "type": "X: Number, y: Number, w: Number, h: Number"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 264,
            "description": "Sets a custom bounding box for registering tap events",
            "itemtype": "method",
            "name": "setScratchBBox",
            "params": [
                {
                    "name": "offsetX",
                    "description": "horizontal distance from the centre point to the top left corner of the bounding box",
                    "type": "Number"
                },
                {
                    "name": "offsetY",
                    "description": "vertical distance from the centre point to the top left corner of the bounding box",
                    "type": "Number"
                },
                {
                    "name": "w",
                    "description": "width",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "height",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 286,
            "itemtype": "method",
            "name": "getScratchMask",
            "return": {
                "description": "",
                "type": "ScratchMask"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 294,
            "itemtype": "method",
            "name": "getScratched",
            "return": {
                "description": "True when the symbol has been revealed",
                "type": "Boolean"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 302,
            "itemtype": "method",
            "name": "setScratchAnimating",
            "params": [
                {
                    "name": "scratchAnimating",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 311,
            "itemtype": "method",
            "name": "getScratchAnimating",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 319,
            "itemtype": "method",
            "name": "getBackgroundObj",
            "return": {
                "description": "",
                "type": "PGCImage|null"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 327,
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 335,
            "itemtype": "method",
            "name": "getValueObj",
            "return": {
                "description": "",
                "type": "PGCImage|null"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 343,
            "itemtype": "method",
            "name": "getPrize",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 351,
            "itemtype": "method",
            "name": "getPrizeObj",
            "return": {
                "description": "",
                "type": "PGCImage|null"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 359,
            "description": "Returns the special object named by the user, or the default special object (if any)",
            "itemtype": "method",
            "name": "getSpecialObj",
            "params": [
                {
                    "name": "specialName ",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": " \"default\""
                }
            ],
            "return": {
                "description": "}",
                "type": "PGCImage|"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 375,
            "description": "Given a list of special object names, returns the first special object it finds on this Symbol that has one of those names.",
            "itemtype": "method",
            "name": "getSpecialObjInList",
            "params": [
                {
                    "name": "list",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "PGCImage|"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 392,
            "itemtype": "method",
            "name": "getFoilImage",
            "return": {
                "description": "",
                "type": "PGCImage|null"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 400,
            "itemtype": "method",
            "name": "getFoilContext",
            "return": {
                "description": "",
                "type": "PGCImage|null"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 408,
            "itemtype": "method",
            "name": "getFoilRect",
            "return": {
                "description": "",
                "type": "PGCRect"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 416,
            "itemtype": "method",
            "name": "getGroup",
            "return": {
                "description": "",
                "type": "SymbolGroup"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 424,
            "itemtype": "method",
            "name": "getPrizeSymbol",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 435,
            "description": "Sets the timeline for this symbol and starts it immediately.",
            "itemtype": "method",
            "name": "setTimeLine",
            "params": [
                {
                    "name": "timeLine",
                    "description": "(TimeLine)"
                }
            ],
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 445,
            "description": "Stops the current timeline and removes it from the symbol.",
            "itemtype": "method",
            "name": "unsetTimeLine",
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 457,
            "description": "Returns the argument that corresponds with the current skin",
            "itemtype": "method",
            "name": "skinSelect",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "optional": true,
                    "multiple": true
                }
            ],
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 466,
            "description": "Function to perform a pulse animation on parts of the symbol",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "partName",
                            "description": "name of the symbol part to animate. This can be \"value\", \"prize\", \"background\", \"foil\"; or the name of a special element.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "partReference",
                            "description": "Direct reference to the symbol part to animate.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "setVisible",
                            "description": "Sets the \"visible\" property on the part. Useful for parts that start off as not being drawn at all (e.g. particle effects)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "firstScale",
                            "description": "Scale to shrink or grow to first.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1.5"
                        },
                        {
                            "name": "lastScale",
                            "description": "Scale to shrink or grow to second.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1"
                        },
                        {
                            "name": "totalTime",
                            "description": "Time to take to go from animation start, to firstScale, to lastScale (milliseconds).",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 750"
                        },
                        {
                            "name": "firstScaleTime",
                            "description": "Time to take to go from animation start to firstScale (milliseconds).",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "lastScaleTime",
                            "description": "Time to take to go from firstScale to lastScale (milliseconds).",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "afterFirstScale",
                            "description": "{Function Function to call after scaling to firstScale. The symbol part is passed as the first argument.",
                            "optional": true
                        },
                        {
                            "name": "afterLastScale",
                            "description": "{Function Function to call after scaling to lastScale. The symbol part is passed as the first argument.",
                            "optional": true
                        },
                        {
                            "name": "loop",
                            "description": "Whether or not to loop the animation.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The time this animation will take to complete, and the callback that starts the animation.",
                "type": "Time: Number, callback: Function"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 580,
            "description": "Function to modify the background element",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 600,
            "description": "Function to modify the font of the value element",
            "params": [
                {
                    "name": "config",
                    "description": "Properties to modify. Leave unset to keep the original values.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The time this animation will take to complete, and the callback that starts the animation.",
                "type": "Time: Number, callback: Function"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 625,
            "description": "Function to modify the font of the prize element",
            "params": [
                {
                    "name": "config",
                    "description": "Properties to modify. Leave unset to keep the original values.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        }
                    ]
                }
            ],
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 650,
            "description": "Helper function. Gets a part of the symbol by name, and, if it's animated, performs the run operation on it.",
            "itemtype": "method",
            "name": "animatePart",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "partName",
                            "description": "name of the symbol part to animate. This can be \"value\", \"prize\", \"background\", \"foil\"; or the name of a special element.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "partReference",
                            "description": "Direct reference to the symbol part to animate.",
                            "type": "PGCImage",
                            "optional": true
                        },
                        {
                            "name": "visibleAfter",
                            "description": "Sets the \"visible\" property on the part after the animation completes. Useful for parts that disappear after animating (e.g. particles)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "count",
                            "description": "Number of times to run the animation",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1"
                        }
                    ]
                }
            ],
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 693,
            "description": "Adds this symbol's components to the SymbolGroup's scene",
            "itemtype": "method",
            "name": "addSelfToScene",
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 721,
            "description": "Removes this symbol's components from the SymbolGroup's scene",
            "itemtype": "method",
            "name": "removeSelfFromScene",
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 749,
            "description": "Draws the brushSprite to the foil and applies the brushRect to the collision mask",
            "itemtype": "method",
            "name": "scratch",
            "params": [
                {
                    "name": "brushSprite",
                    "description": ""
                },
                {
                    "name": "brushRect",
                    "description": ""
                },
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 779,
            "description": "Starts this symbol's scratch animation",
            "itemtype": "method",
            "name": "animateScratch",
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 804,
            "description": "Updates the state of the Symbol, and is called every step by the SymbolGroup. Named \"step\" to avoid confusion with the PGCScene update function.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "delta",
                    "description": ""
                }
            ],
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 858,
            "description": "Takes a callback function and applies it to every sprite in this symbol. Useful for animating whole symbols.",
            "itemtype": "method",
            "name": "forEachSprite",
            "params": [
                {
                    "name": "func",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/Symbol.js",
            "line": 875,
            "description": "Custom toString function - returns a string containing the symbol coordinates, value string and prize string.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Symbol",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 96,
            "description": "Wrapper on ip.getPreloadedImage(). If the input is a string, checks the image preloader and returns the result. If it isn't, returns the input unchanged.",
            "itemtype": "method",
            "name": "getPreloadedImage",
            "params": [
                {
                    "name": "image",
                    "description": "Image name or reference",
                    "type": "HTMLImageElement|HTMLCanvasElement|ImageBitmap|String"
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 108,
            "description": "Modifies a default object with the property values in a modification object.",
            "itemtype": "method",
            "name": "configOR",
            "params": [
                {
                    "name": "def",
                    "description": "The default object",
                    "type": "Object"
                },
                {
                    "name": "mod",
                    "description": "The modification object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The combined mod||def object.",
                "type": "Object"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 124,
            "description": "Refreshes the current title graphics with a new one based on the current _titleConfigs",
            "itemtype": "method",
            "name": "applyTitleConfigs",
            "access": "private",
            "tagname": "",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 159,
            "description": "Modifies the default symbol settings using the appropriate skinConfig. Called internally by setSymbols",
            "itemtype": "method",
            "name": "applyCurrentSkin",
            "access": "private",
            "tagname": "",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 277,
            "description": "Creates a symbol using the current settings. Called internally by setSymbols",
            "itemtype": "method",
            "name": "createSymbol",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of the symbol in the SymbolGroup",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of the symbol in the SymbolGroup",
                    "type": "Number"
                },
                {
                    "name": "prize",
                    "description": "Symbol prize amount",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Symbol value string",
                    "type": "String"
                },
                {
                    "name": "isPrizeSymbol ",
                    "description": "Setting this flag applies the prizeSymbolConfig instead of the standard config",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": " false"
                }
            ],
            "return": {
                "description": "",
                "type": "Symbol"
            },
            "access": "private",
            "tagname": "",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 568,
            "description": "Checks that the main area of the scene canvas (not including the gutter) is the same width and height as its container element. Resizes the canvas as necessary.",
            "itemtype": "method",
            "name": "fitToContainer",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 611,
            "itemtype": "method",
            "name": "getDisableScratch",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 619,
            "description": "Enables/disables scratch effects.",
            "itemtype": "method",
            "name": "setDisableScratch",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 627,
            "itemtype": "method",
            "name": "getDisableInput",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 635,
            "description": "Enables/disables response to mouse/touch events.",
            "itemtype": "method",
            "name": "setDisableInput",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 643,
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 651,
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 659,
            "description": "Sets the configuration for the title of the scene",
            "itemtype": "method",
            "name": "setTitleConfig",
            "params": [
                {
                    "name": "config",
                    "description": "A text definition object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "nameVal",
                            "description": "Unique identifier for this title element",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"default\""
                        },
                        {
                            "name": "string",
                            "description": "Title string to display",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "anchor",
                            "description": "Origin point of the title sprite",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " PGCAnchors.TOP_LEFT"
                        },
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 699,
            "description": "Sets the title string on a title image sprite.",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "nameVal",
                            "description": "The name of the title sprite to change.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"default\""
                        },
                        {
                            "name": "string",
                            "description": "The text to replaces the current title text with.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 724,
            "description": "Sets the PGCImage object to be used to draw the background of each symbol. This is basically a \"stamp\" used to draw the same image to the scratch scene multiple times.",
            "itemtype": "method",
            "name": "setBackgroundConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 100"
                        },
                        {
                            "name": "startingScale",
                            "description": "Scaling factor to apply on creation.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 743,
            "description": "Configures the \"Value\" object of a symbol, i.e. the number behind the foil that the user matches with the other symbols.",
            "itemtype": "method",
            "name": "setValueConfig",
            "params": [
                {
                    "name": "config",
                    "description": "A text definition object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "maxWidth",
                            "description": "Set a maximum width that the value object can have while the symbol is unscratched. The object will scale down to this size if required.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 779,
            "itemtype": "method",
            "name": "getValueConfig",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 811,
            "itemtype": "method",
            "name": "getValueFactory",
            "return": {
                "description": "",
                "type": "CanvasText"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 819,
            "description": "Configures the \"Prize\" of a symbol, i.e. the cash amount written on a symbol that the user wins if there is a match.",
            "itemtype": "method",
            "name": "setPrizeConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "maxWidth",
                            "description": "Set a maximum width that the prize object can have while the symbol is unscratched. The object will scale down to this size if required.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 854,
            "itemtype": "method",
            "name": "getPrizeConfig",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 886,
            "itemtype": "method",
            "name": "getPrizeFactory",
            "return": {
                "description": "",
                "type": "CanvasText"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 894,
            "itemtype": "method",
            "name": "getPrizeSymbolPrizeFactory",
            "return": {
                "description": "",
                "type": "CanvasText"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 902,
            "description": "Configures special \"prize symbols\" to add to the game. The prize symbols are special scratchable symbols that display the prize for getting a winning combination.\nNOTE: Prize symbols all have the reserved value of \"PRIZE_SYMBOL\". This is what you use to apply special sprites and text.",
            "itemtype": "method",
            "name": "setPrizeSymbolConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "prize",
                            "description": "",
                            "optional": true,
                            "props": [
                                {
                                    "name": "offsetX",
                                    "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "offsetY",
                                    "description": "Vertical position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "fontFamily",
                                    "description": "The font family to use",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"arial\""
                                },
                                {
                                    "name": "fontSize",
                                    "description": "Text size / line height",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"10px\""
                                },
                                {
                                    "name": "fontStyle",
                                    "description": "normal|italic|oblique",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontWeight",
                                    "description": "normal|bold|bolder|lighter|100|200...",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontVariant",
                                    "description": "normal|small-caps",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fillStyle",
                                    "description": "Fill colour to apply to the characters",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"black\""
                                },
                                {
                                    "name": "strokeStyles",
                                    "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "lineWidths",
                                    "description": "Stroke widths in pixels. Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "shadowColour",
                                    "description": "Fill colour to apply to text shadow. Null = no shadow.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " null"
                                },
                                {
                                    "name": "shadowBlur",
                                    "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetX",
                                    "description": "Horizontal distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetY",
                                    "description": "Vertical distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "maxWidth",
                                    "description": "Set a maximum width that the prize object can have while the symbol is unscratched. The object will scale down to this size if required.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "foil",
                            "description": "",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                },
                                {
                                    "name": "scratchArea",
                                    "description": "Defines what must be uncovered before the symbol counts as being scratched. Can be set to \"Value\", \"Prize\" or \"Foil\"(default)",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "foilOpacity",
                                    "description": "Special foil opacity - allows partially transparent foil that does not reveal the values beneath.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 1.0"
                                }
                            ]
                        },
                        {
                            "name": "scratchSprite",
                            "description": "",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 971,
            "description": "Configures the default \"Foil\" of a symbol, i.e. the image that is drawn over the symbol content which is scratched off by the player.",
            "itemtype": "method",
            "name": "setFoilConfig",
            "params": [
                {
                    "name": "config",
                    "description": "An image/sprite config object.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 100"
                        },
                        {
                            "name": "scratchArea",
                            "description": "Defines what must be uncovered before the symbol counts as being scratched. Can be set to \"Value\", \"Prize\" or \"Foil\"(default)",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "foilOpacity",
                            "description": "Special foil opacity - allows partially transparent foil that does not reveal the values beneath.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1.0"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 992,
            "description": "Configures the default PGCSprite object to be used to auto-erase the foil from a symbol. This is drawn to the foil using the \"destination-out\" composite operation, essentially erasing the silouette of this sprite from the foil.",
            "itemtype": "method",
            "name": "setScratchSpriteConfig",
            "params": [
                {
                    "name": "config",
                    "description": "The config to create the PGCSprite",
                    "type": "Object",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 100"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1011,
            "itemtype": "method",
            "name": "setSymbolTouchBBox",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "optional": true,
                    "props": [
                        {
                            "name": "offsetX",
                            "description": "horizontal distance from the centre point for the top left corner of the bounding box",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "offsetY",
                            "description": "vertical distance from the centre point for the top left corner of the bounding box",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "w",
                            "description": "width",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "h",
                            "description": "height",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The Symbol object, so functions can be chained",
                "type": "Symbol"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1024,
            "description": "Adds an animation to apply to the foil",
            "itemtype": "method",
            "name": "setFoilAnimation",
            "params": [
                {
                    "name": "animation",
                    "description": "",
                    "type": "PGCSprite",
                    "optional": true
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1038,
            "description": "Returns the number of symbols this group has places for.",
            "itemtype": "method",
            "name": "getGroupSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1047,
            "description": "Returns all the symbols in the SymbolGroup, or a subset of them.",
            "itemtype": "method",
            "name": "getSymbols",
            "params": [
                {
                    "name": "subset",
                    "description": "Subset of the symbols. Leave empty to return all the symbols in the group.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "start",
                            "description": "Starting index for the symbol subset you want",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "length",
                            "description": "Length of the symbol subset you want",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The Symbol instances currently in the SymbolGroup",
                "type": "Array"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1065,
            "description": "Removes all existing symbols from the scene and the SymbolGroup.",
            "itemtype": "method",
            "name": "clearSymbols",
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1080,
            "description": "Creates the symbols for the symbolGroup from the provided configuration object and adds them to the scene.",
            "itemtype": "method",
            "name": "setSymbols",
            "params": [
                {
                    "name": "symbolSettings ",
                    "description": "",
                    "type": "Value: undefined, prize: undefined",
                    "optional": true,
                    "optdefault": " [...]] {Array} The server response configured in the format [{value: String, prize: String}"
                },
                {
                    "name": "startingIndex ",
                    "description": "The symbol index to apply to the first symbol in this group.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": " 0"
                }
            ],
            "return": {
                "description": "The number of symbols created",
                "type": "Number"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1207,
            "description": "Sets the \"pool\" of symbol positions. When a new set of symbols is generated, they will be added to the scene at these coordinates.",
            "itemtype": "method",
            "name": "setSymbolPositions",
            "params": [
                {
                    "name": "positions",
                    "description": "An array of objects indicating the symbol positions and types",
                    "type": "Array",
                    "props": [
                        {
                            "name": "x",
                            "description": "X-Coordinate in the group canvas.",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "Y-Coordinate in the group canvas.",
                            "type": "Number"
                        },
                        {
                            "name": "isPrizeSymbol",
                            "description": "Indicates that this symbol is a prize object",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1228,
            "itemtype": "method",
            "name": "getScene",
            "return": {
                "description": "",
                "type": "PGCScene"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1236,
            "itemtype": "method",
            "name": "getMaxAnimationDuration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1244,
            "description": "Given a name, returns the group sprite with that name.",
            "itemtype": "method",
            "name": "getGroupSprite",
            "params": [
                {
                    "name": "nameVal",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "PGCImage"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1259,
            "description": "Allows the user to set a custom scratch area on all symbols in the group.",
            "itemtype": "method",
            "name": "setScratchArea",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "offsetX",
                            "description": "horizontal distance from the centre point to the top left corner of the bounding box",
                            "type": "Number"
                        },
                        {
                            "name": "offsetY",
                            "description": "vertical distance from the centre point to the top left corner of the bounding box",
                            "type": "Number"
                        },
                        {
                            "name": "w",
                            "description": "width",
                            "type": "Number"
                        },
                        {
                            "name": "h",
                            "description": "height",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1280,
            "description": "Sets the timeline for this SymbolGroup and starts it immediately.",
            "itemtype": "method",
            "name": "setTimeLine",
            "params": [
                {
                    "name": "timeLine",
                    "description": "(TimeLine)"
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1290,
            "description": "Stops the current timeline and removes it from the SymbolGroup.",
            "itemtype": "method",
            "name": "unsetTimeLine",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1302,
            "description": "Adds an additional background config to the SymbolGroup. The SymbolGroup will cycle through the available background configurations as it creates new symbols.\nThe default settings(backgroundConfigs[0]) will be used where no config value has been provided.",
            "itemtype": "method",
            "name": "addBackgroundConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1335,
            "description": "Adds an additional foil config to the SymbolGroup. The SymbolGroup will cycle through the available foil configurations as it creates new symbols.\nThe default settings(foilConfigs[0]) will be used where no config value has been provided.",
            "itemtype": "method",
            "name": "addFoilConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "scratchArea",
                            "description": "Defines what must be uncovered before the symbol counts as being scratched. Can be set to \"Value\", \"Prize\" or \"Foil\"(default)",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "foilOpacity",
                            "description": "Special foil opacity - allows partially transparent foil that does not reveal the values beneath.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1371,
            "description": "Adds an additional scratch sprite config to the SymbolGroup. The SymbolGroup will cycle through the available scratch sprite configurations as it creates new symbols.\nThe default settings(scratchSpriteConfigs[0]) will be used where no config value has been provided.",
            "itemtype": "method",
            "name": "addScratchSpriteConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1403,
            "description": "Adds an extra sprite to symbols, to use in animations or in place of a value and/or prize. The sprite can be added to all symbols or just symbols with a specific value range.",
            "itemtype": "method",
            "name": "addSpecialConfig",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "values",
                            "description": "Array of symbol value strings that will trigger adding this sprite to the symbol. If config.values is undefined, show the sprite on default symbols.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "nameVal",
                            "description": "Name of this component. Useful for animations",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"default\""
                        },
                        {
                            "name": "hideValue",
                            "description": "If true, hides the value text sprite on symbols that show this sprite.",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "hidePrize",
                            "description": "If true, hides the prize text sprite on symbols that show this sprite.",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the sprite relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the sprite relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "startingScale",
                            "description": "Scaling factor to apply to the sprite at creation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1"
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 100"
                        },
                        {
                            "name": "visible",
                            "description": "Starting visibility.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "zIndex",
                            "description": "Z-Index of the sprite on the symbol",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " SymbolZIndices.SPRITE"
                        },
                        {
                            "name": "cropToFoil",
                            "description": "Set true to crop this image to the limits of the foil while the symbol remains unscratched. Useful for images that stick out from under the foil.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1456,
            "description": "Adds extra text to each symbol that can be used in animations or in place of a value number and/or prize. Different strings can be applied depending on the value or prize.",
            "itemtype": "method",
            "name": "addSpecialTextConfig",
            "params": [
                {
                    "name": "config",
                    "description": "A text definition object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "values",
                            "description": "Array of symbol value strings that will trigger adding this text sprite to the symbol. If config.values is undefined, show the sprite on default symbols.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "nameVal",
                            "description": "Name of this component. Useful for animations",
                            "type": "String"
                        },
                        {
                            "name": "hideValue",
                            "description": "If true, hides the value text sprite on symbols that show this sprite.",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "hidePrize",
                            "description": "If true, hides the prize text sprite on symbols that show this sprite.",
                            "optional": true,
                            "optdefault": " false"
                        },
                        {
                            "name": "strings",
                            "description": "Config object detailing the strings that can be displayed by this symbol.",
                            "type": "Object",
                            "optional": true,
                            "multiple": true,
                            "props": [
                                {
                                    "name": "value",
                                    "description": "Value that triggers the object to have the specific string.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "string",
                                    "description": "String to display when the symbol has the corresponding value and/or prize.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the text centre relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the text centre relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "startingScale",
                            "description": "Scaling factor to apply to the image at creation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1"
                        },
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "maxWidth",
                            "description": "Set a maximum width that the text sprite can have while the symbol is unscratched. The object will scale down to this size if required.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "visible",
                            "description": "Starting visibility.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "zIndex",
                            "description": "Z-Index of the sprite on the symbol",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " SymbolZIndices.SPRITE"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1527,
            "description": "Allows the user to set custom scratch areas on special symbols",
            "itemtype": "method",
            "name": "addScratchArea",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "values",
                            "description": "Apply this scratch area to symbols with one of the value strings in the list",
                            "type": "Array"
                        },
                        {
                            "name": "offsetX",
                            "description": "horizontal distance from the centre point to the top left corner of the bounding box",
                            "type": "Number"
                        },
                        {
                            "name": "offsetY",
                            "description": "vertical distance from the centre point to the top left corner of the bounding box",
                            "type": "Number"
                        },
                        {
                            "name": "w",
                            "description": "width",
                            "type": "Number"
                        },
                        {
                            "name": "h",
                            "description": "height",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1545,
            "description": "Adds an animation timeline that can be fired when the trigger condition is met",
            "itemtype": "method",
            "name": "addAnimation",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "triggerCondition",
                            "description": "Specific condition that must be satisfied before this callback is fired",
                            "type": "Number"
                        },
                        {
                            "name": "values",
                            "description": "Array of symbol value strings. The symbol animation will apply only to symbols with these values. If config.values is empty, the animation will apply to all symbols.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "priority",
                            "description": "\"Priority\" of the animation. If two sequences are triggered simultaneously, the higher priority one will be run.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " pgc.Priorities.NORMAL"
                        },
                        {
                            "name": "duration",
                            "description": "Length of the animation sequence in ms. This should be specified if the summary popup is appearing before this animation completes.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "timeLine",
                            "description": "Symbol animation timeline.",
                            "type": "TimeLine",
                            "optional": true
                        },
                        {
                            "name": "groupTimeLine",
                            "description": "Group animation timeline.",
                            "type": "TimeLine",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1574,
            "description": "Add an additional text sprite to the SymbolGroup.",
            "itemtype": "method",
            "name": "addTitleConfig",
            "params": [
                {
                    "name": "config",
                    "description": "A text definition object",
                    "type": "Object",
                    "props": [
                        {
                            "name": "nameVal",
                            "description": "Unique identifier for this title element",
                            "type": "String"
                        },
                        {
                            "name": "string",
                            "description": "Title string to display",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the prize text relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "anchor",
                            "description": "Origin point of the title sprite",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " PGCAnchors.TOP_LEFT"
                        },
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "zIndex",
                            "description": "Z-index to add the title to the scene at",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " SymbolZindices.BACKGROUND + 1"
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1618,
            "description": "Adds an extra sprite to the SymbolGroup to use in animations done at the group level (e.g. the shine effect on the lucky numbers in Pengedryss).",
            "itemtype": "method",
            "name": "addGroupSprite",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "nameVal",
                            "description": "Name of this component. Useful for animations",
                            "type": "String"
                        },
                        {
                            "name": "source",
                            "description": "The image source",
                            "type": "String|HTMLCanvasElement"
                        },
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the sprite in the group canvas.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the sprite in the group canvas.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "startingScale",
                            "description": "Scaling factor to apply to the sprite at creation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1"
                        },
                        {
                            "name": "sampleX",
                            "description": "The image sample's x coordinate",
                            "type": "Number"
                        },
                        {
                            "name": "sampleY",
                            "description": "The image sample's y coordinate",
                            "type": "Number"
                        },
                        {
                            "name": "sampleWidth",
                            "description": "Width of the image sample.",
                            "type": "Number"
                        },
                        {
                            "name": "sampleHeight",
                            "description": "Height of the image sample.",
                            "type": "Number"
                        },
                        {
                            "name": "anchor",
                            "description": "Sprite origin position.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " PGCAnchors.TOP_LEFT"
                        },
                        {
                            "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                            "description": "",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "frameRate",
                            "description": "Frame rate.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 100"
                        },
                        {
                            "name": "visible",
                            "description": "Starting visibility.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "zIndex",
                            "description": "Z-Index of the sprite in the scene.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " SymbolZIndices.POP_OVER"
                        }
                    ]
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1668,
            "description": "Applies a theme to the scratch card.",
            "itemtype": "method",
            "name": "addSkin",
            "params": [
                {
                    "name": "newDefaultConfig",
                    "description": "The elements of the default config that are overwritten for this skin.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "title",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "offsetX",
                                    "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "offsetY",
                                    "description": "Vertical position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "fontFamily",
                                    "description": "The font family to use",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"arial\""
                                },
                                {
                                    "name": "fontSize",
                                    "description": "Text size / line height",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"10px\""
                                },
                                {
                                    "name": "fontStyle",
                                    "description": "normal|italic|oblique",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontWeight",
                                    "description": "normal|bold|bolder|lighter|100|200...",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontVariant",
                                    "description": "normal|small-caps",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fillStyle",
                                    "description": "Fill colour to apply to the characters",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"black\""
                                },
                                {
                                    "name": "strokeStyles",
                                    "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "lineWidths",
                                    "description": "Stroke widths in pixels. Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "shadowColour",
                                    "description": "Fill colour to apply to text shadow. Null = no shadow.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " null"
                                },
                                {
                                    "name": "shadowBlur",
                                    "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetX",
                                    "description": "Horizontal distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetY",
                                    "description": "Vertical distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                }
                            ]
                        },
                        {
                            "name": "background",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                }
                            ]
                        },
                        {
                            "name": "value",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "offsetX",
                                    "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "offsetY",
                                    "description": "Vertical position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "fontFamily",
                                    "description": "The font family to use",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"arial\""
                                },
                                {
                                    "name": "fontSize",
                                    "description": "Text size / line height",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"10px\""
                                },
                                {
                                    "name": "fontStyle",
                                    "description": "normal|italic|oblique",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontWeight",
                                    "description": "normal|bold|bolder|lighter|100|200...",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontVariant",
                                    "description": "normal|small-caps",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fillStyle",
                                    "description": "Fill colour to apply to the characters",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"black\""
                                },
                                {
                                    "name": "strokeStyles",
                                    "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "lineWidths",
                                    "description": "Stroke widths in pixels. Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "shadowColour",
                                    "description": "Fill colour to apply to text shadow. Null = no shadow.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " null"
                                },
                                {
                                    "name": "shadowBlur",
                                    "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetX",
                                    "description": "Horizontal distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetY",
                                    "description": "Vertical distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                }
                            ]
                        },
                        {
                            "name": "prize",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "offsetX",
                                    "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "offsetY",
                                    "description": "Vertical position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "fontFamily",
                                    "description": "The font family to use",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"arial\""
                                },
                                {
                                    "name": "fontSize",
                                    "description": "Text size / line height",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"10px\""
                                },
                                {
                                    "name": "fontStyle",
                                    "description": "normal|italic|oblique",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontWeight",
                                    "description": "normal|bold|bolder|lighter|100|200...",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fontVariant",
                                    "description": "normal|small-caps",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "fillStyle",
                                    "description": "Fill colour to apply to the characters",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"black\""
                                },
                                {
                                    "name": "strokeStyles",
                                    "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "lineWidths",
                                    "description": "Stroke widths in pixels. Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "shadowColour",
                                    "description": "Fill colour to apply to text shadow. Null = no shadow.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " null"
                                },
                                {
                                    "name": "shadowBlur",
                                    "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetX",
                                    "description": "Horizontal distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "shadowOffsetY",
                                    "description": "Vertical distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                }
                            ]
                        },
                        {
                            "name": "foil",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                },
                                {
                                    "name": "scratchArea",
                                    "description": "Defines what must be uncovered before the symbol counts as being scratched. Can be set to \"Value\", \"Prize\" or \"Foil\"(default)",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "foilOpacity",
                                    "description": "Special foil opacity - allows partially transparent foil that does not reveal the values beneath.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 1.0"
                                }
                            ]
                        },
                        {
                            "name": "scratchSprite",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                }
                            ]
                        },
                        {
                            "name": "foilAnimation",
                            "description": "",
                            "type": "PGCSprite",
                            "optional": true
                        },
                        {
                            "name": "title",
                            "description": "",
                            "type": "PGCSprite",
                            "optional": true
                        },
                        {
                            "name": "prizeSymbol",
                            "description": "",
                            "optional": true,
                            "props": [
                                {
                                    "name": "prize",
                                    "description": "",
                                    "optional": true
                                },
                                {
                                    "name": "prize.offsetX",
                                    "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "prize.offsetY",
                                    "description": "Vertical position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "prize.fontFamily",
                                    "description": "The font family to use",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"arial\""
                                },
                                {
                                    "name": "prize.fontSize",
                                    "description": "Text size / line height",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"10px\""
                                },
                                {
                                    "name": "prize.fontStyle",
                                    "description": "normal|italic|oblique",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "prize.fontWeight",
                                    "description": "normal|bold|bolder|lighter|100|200...",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "prize.fontVariant",
                                    "description": "normal|small-caps",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"normal\""
                                },
                                {
                                    "name": "prize.fillStyle",
                                    "description": "Fill colour to apply to the characters",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " \"black\""
                                },
                                {
                                    "name": "prize.strokeStyles",
                                    "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "prize.lineWidths",
                                    "description": "Stroke widths in pixels. Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "prize.shadowColour",
                                    "description": "Fill colour to apply to text shadow. Null = no shadow.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": " null"
                                },
                                {
                                    "name": "prize.shadowBlur",
                                    "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "prize.shadowOffsetX",
                                    "description": "Horizontal distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "prize.shadowOffsetY",
                                    "description": "Vertical distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 0"
                                },
                                {
                                    "name": "prize.maxWidth",
                                    "description": "Set a maximum width that the prize object can have while the symbol is unscratched. The object will scale down to this size if required.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "foil",
                                    "description": "",
                                    "optional": true
                                },
                                {
                                    "name": "foil.source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "foil.sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "foil.sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "foil.sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "foil.sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "foil.frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "foil.frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                },
                                {
                                    "name": "foil.scratchArea",
                                    "description": "Defines what must be uncovered before the symbol counts as being scratched. Can be set to \"Value\", \"Prize\" or \"Foil\"(default)",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "foil.foilOpacity",
                                    "description": "Special foil opacity - allows partially transparent foil that does not reveal the values beneath.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 1.0"
                                },
                                {
                                    "name": "scratchSprite",
                                    "description": "",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "scratchSprite.frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "altConfig",
                    "description": "The elements of any alternate configs that will be replaced this skin",
                    "type": "Object",
                    "optional": true,
                    "multiple": true,
                    "props": [
                        {
                            "name": "altTitle",
                            "description": "Additional title config",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "offsetX",
                                    "description": "Horizontal position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "offsetY",
                                    "description": "Vertical position of the prize text relative to the centre of the symbol.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "fontFamily",
                                    "description": "The font family to use",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "fontSize",
                                    "description": "Text size / line height",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "fontStyle",
                                    "description": "normal|italic|oblique",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "fontWeight",
                                    "description": "normal|bold|bolder|lighter|100|200...",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "fontVariant",
                                    "description": "normal|small-caps",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "strokeStyles",
                                    "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "lineWidths",
                                    "description": "Stroke widths in pixels. Listed in drawing order.",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "shadowColour",
                                    "description": "Fill colour to apply to text shadow. Null = no shadow.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "shadowBlur",
                                    "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "shadowOffsetX",
                                    "description": "Horizontal distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "shadowOffsetY",
                                    "description": "Vertical distance between shadow and characters in px.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "altBackground",
                            "description": "Additional foil config",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "altFoil",
                            "description": "Additional foil config",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "scratchArea",
                                    "description": "Defines what must be uncovered before the symbol counts as being scratched. Can be set to \"Value\", \"Prize\" or \"Foil\"(default)",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "foilOpacity",
                                    "description": "Special foil opacity - allows partially transparent foil that does not reveal the values beneath.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "altScratchSprite",
                            "description": "Additional foil config",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "special",
                            "description": "Additional special config",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "values",
                                    "description": "Array of symbol value strings that will trigger adding this sprite to the symbol. If this value doesn't exist, show the sprite on default symbols.",
                                    "type": "Array",
                                    "optional": true,
                                    "optdefault": " []"
                                },
                                {
                                    "name": "source",
                                    "description": "The image source",
                                    "type": "String|HTMLCanvasElement",
                                    "optional": true
                                },
                                {
                                    "name": "sampleX",
                                    "description": "The image sample's x coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleY",
                                    "description": "The image sample's y coordinate",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleWidth",
                                    "description": "Width of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "sampleHeight",
                                    "description": "Height of the image sample.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frames]  Frame data array with items in the format: [{x: {Number}, y: {Number}, [w: {Number}], [h: {Number}]},...",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Frame rate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": " 100"
                                },
                                {
                                    "name": "sprite",
                                    "description": "A previously made sprite to be added to the SymbolGroup as-is.",
                                    "type": "PGCImage",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "specialText",
                            "description": "Additional special text config",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "values",
                            "description": "Array of symbol value strings that will trigger adding this text sprite to the symbol. If config.values is undefined, show the sprite on default symbols.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "strings",
                            "description": "Config object detailing the strings that can be displayed by this symbol.",
                            "type": "Object",
                            "optional": true,
                            "multiple": true,
                            "props": [
                                {
                                    "name": "value",
                                    "description": "Value that triggers the object to have the specific string.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "string",
                                    "description": "String to display when the symbol has the corresponding value and/or prize.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "offsetX",
                            "description": "Horizontal position of the text centre relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "offsetY",
                            "description": "Vertical position of the text centre relative to the centre of the symbol.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "fontFamily",
                            "description": "The font family to use",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"arial\""
                        },
                        {
                            "name": "fontSize",
                            "description": "Text size / line height",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"10px\""
                        },
                        {
                            "name": "fontStyle",
                            "description": "normal|italic|oblique",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontWeight",
                            "description": "normal|bold|bolder|lighter|100|200...",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fontVariant",
                            "description": "normal|small-caps",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"normal\""
                        },
                        {
                            "name": "fillStyle",
                            "description": "Fill colour to apply to the characters",
                            "type": "String",
                            "optional": true,
                            "optdefault": " \"black\""
                        },
                        {
                            "name": "strokeStyles",
                            "description": "Fill colours to apply to strokes (i.e. text outlines). Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "lineWidths",
                            "description": "Stroke widths in pixels. Listed in drawing order.",
                            "type": "Array",
                            "optional": true,
                            "optdefault": " []"
                        },
                        {
                            "name": "shadowColour",
                            "description": "Fill colour to apply to text shadow. Null = no shadow.",
                            "type": "String",
                            "optional": true,
                            "optdefault": " null"
                        },
                        {
                            "name": "shadowBlur",
                            "description": "Gaussian shadow blur radius in px. Larger numbers = more blur.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetX",
                            "description": "Horizontal distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "shadowOffsetY",
                            "description": "Vertical distance between shadow and characters in px.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 0"
                        },
                        {
                            "name": "maxWidth",
                            "description": "Set a maximum width that the text sprite can have while the symbol is unscratched. The object will scale down to this size if required.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "[altConfig.altTitle.fillStyle",
                    "description": "Fill colour to apply to the characters",
                    "type": "String"
                }
            ],
            "return": {
                "description": "This SymbolGroup object, so functions can be chained.",
                "type": "SymbolGroup"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 1965,
            "description": "Helper function. Gets an animated group sprite by name and performs the run operation on it.",
            "itemtype": "method",
            "name": "animateGroupSprite",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "spriteName",
                            "description": "Name of the group sprite.",
                            "type": "String"
                        },
                        {
                            "name": "x",
                            "description": "Optional X-position to move the sprite to before animating it.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "y",
                            "description": "Optional Y-position to move the sprite to before animating it.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "visibleAfter",
                            "description": "Whether or not the sprite remains visible once the animation is complete.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": " true"
                        },
                        {
                            "name": "count",
                            "description": "Number of times to run the animation",
                            "type": "Number",
                            "optional": true,
                            "optdefault": " 1"
                        }
                    ]
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2003,
            "description": "Runs the animations with the given trigger value. High priority animations are played instead of lower priority ones. Animations with the same priority trigger simultaneously.",
            "itemtype": "method",
            "name": "triggerAnimation",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "props": [
                        {
                            "name": "trigger",
                            "description": "The trigger that, uh, triggered.",
                            "type": "ScratchAnimationTrigger"
                        },
                        {
                            "name": "symbols",
                            "description": "The Symbols that this trigger applies to.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "True if any symbol or group animation was triggered.",
                "type": "Boolean"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2081,
            "itemtype": "method",
            "name": "tapReveal",
            "params": [
                {
                    "name": "x",
                    "description": "X-Coordinate of tap",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y-Coordinate of tap",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the index of the symbol that was scratched or null if no symbol was scratched",
                "type": "Number"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2121,
            "description": "Automatically scratches the foil off of all remaining symbols",
            "itemtype": "method",
            "name": "revealAll",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2143,
            "description": "Scratches the symbol foils using the provided brushSprite",
            "params": [
                {
                    "name": "brushSprite",
                    "description": "",
                    "type": "PGCImage"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2162,
            "description": "Returns true when all symbols are scratched",
            "itemtype": "method",
            "name": "allScratched",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2185,
            "description": "Puts all the scratched symbols into an array and returns a serialised version",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "a serialised array",
                "type": "String"
            },
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2200,
            "description": "Takes a serialised array string made using this.save() and parses it",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "data",
                    "description": "The serialised array",
                    "type": "String"
                }
            ],
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2229,
            "description": "Tells the SymbolGroup to redraw itself next frame",
            "itemtype": "method",
            "name": "requestDraw",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2237,
            "description": "Performs update operations on the group that should be done every frame (regardless of _drawRequired state). Named \"step\" to avoid confusion with the PGCScene update function.",
            "itemtype": "method",
            "name": "step",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/SymbolGroup.js",
            "line": 2287,
            "description": "Updates the state of the PGCContainer objects in the symbolGroup and draws them to the canvas. This is not normally called outside of SymbolGroup, but is made public for bugfixing reasons.",
            "itemtype": "method",
            "name": "render",
            "access": "public",
            "tagname": "",
            "class": "SymbolGroup",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 19,
            "itemtype": "method",
            "name": "getLooping",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 27,
            "description": "Turns on and off looping the timeline",
            "itemtype": "method",
            "name": "timeLineLoop",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 38,
            "itemtype": "method",
            "name": "getTarget",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 46,
            "description": "Sets the \"Target\" object - all callbacks will be bound to this object.",
            "itemtype": "method",
            "name": "setTarget",
            "params": [
                {
                    "name": "target",
                    "description": ""
                }
            ],
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 59,
            "description": "Advances the timeline and fires any callbacks that are due. Called by the Symbol during animation sequences. Named \"step\" to avoid confusion with the PGCScene update function.",
            "itemtype": "method",
            "name": "step",
            "params": [
                {
                    "name": "delta",
                    "description": "Milliseconds since the last step.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 98,
            "description": "Adds a callback to the timeline.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "milliseconds",
                    "description": "Fire the supplied callback function after this number of milliseconds.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "Callback to fire.",
                    "type": "Function"
                }
            ],
            "access": "public",
            "tagname": "",
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 136,
            "description": "Starts this timeline from the beginning.",
            "itemtype": "method",
            "name": "start",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 152,
            "description": "Stops this timeline and resets its position to the start.",
            "itemtype": "method",
            "name": "stop",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 164,
            "description": "Pauses this timeline.",
            "itemtype": "method",
            "name": "timeLinePause",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 175,
            "description": "Unpauses this timeline and resumes it from its current position.",
            "itemtype": "method",
            "name": "timeLineResume",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "This timeline, so functions can be chained",
                "type": "TimeLine"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 186,
            "description": "Creates a deep-copy of this timeline, with an option to change its target at the same time.",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "target",
                    "description": "The new timeline's target object. Defaults to the same target as this timeline.",
                    "optional": true
                }
            ],
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 202,
            "description": "Check if the timeline is currently running",
            "itemtype": "method",
            "name": "isRunning",
            "return": {
                "description": "if the timeline is running or not",
                "type": "Boolean"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 211,
            "description": "Get the current progress of the timeline. Begins from the start of the current loop.",
            "itemtype": "method",
            "name": "getProgress",
            "return": {
                "description": "Progress of the timeline, in milliseconds",
                "type": "Number"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/TimeLine.js",
            "line": 220,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TimeLine",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 27,
            "description": "Adding listeners to the game's \"ready\" state",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 37,
            "description": "Adding listeners to the game's \"scratchtoolchanged\" state \n(it is triggered when the user changes the selected scratch tool)",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 48,
            "description": "Adding listeners to the game's \"idle\" state \n(it is triggered when the user hasn't made any interaction in terms of gameplay for a certain amount of time)",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 70,
            "description": "Adding listeners to the game's \"idlefinish\" state \n(it is triggered when idle state has been interrupted by any sort of user interaction)",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 81,
            "description": "Adding listeners to the game's \"lastintroanimation\" state \n(it is triggered when the element endowed by the \"last-intro-animation\" class has finished it's animation)",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 92,
            "description": "Adding listeners to the game's \"lastintroanimation\" state \n(it is triggered when the element endowed by the \"last-intro-animation\" class has finished it's animation)",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 103,
            "description": "Adding listeners to the game's \"scratchtoolchanged\" state\n(it is triggered when the user changes the selected scratch tool)",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 117,
            "description": "Adding function to update the price label inside the game scene",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 129,
            "description": "Triggering an specified event and delegating it to all the subscribed listeners",
            "params": [
                {
                    "name": "type",
                    "description": "the event type we want to trigger",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 139,
            "description": "Initialises the game audio system.  Note about the versions.  Version 1 refering to the original Audio\nSprite implementation which is effectively a very elaborate wrapper around the <audio> tag.\nVersion 2 refers to the WebAudioAPI requires much less Javascript code to facilitate game audio.",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 244,
            "description": "Checks readyFunc every wait ms until it returns true, then fires callback",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 255,
            "return": {
                "description": "- Returns the shared audio engine object",
                "type": "Object"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 263,
            "description": "returning the appropriate url to the sound resource regarding whether the m4a format is supported or not",
            "return": {
                "description": "string contaning the URL to the resource",
                "type": "String"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 280,
            "description": "Used to indicate if the Ambient music is playing.  The primary purpose of this is to prevent the audio engine\nfrom starting playback if the music is already playing.",
            "return": {
                "description": "Flag indicating if the music is playing.  true: it's playing. false: it's not playing.  Simples!",
                "type": "Boolean"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 289,
            "description": "Begins playback of the ambient music.",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 342,
            "description": "Fades the ambient music out and ends the track\nTODO: fix the easing",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 368,
            "description": "Start the scratching sound.",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 404,
            "description": "Called on each interval step started by startScratchSound.  Applies the logic to stop the scratching sound if\nit appears as if there hasn't been a scratch for a while.",
            "params": [
                {
                    "name": "forceStop",
                    "description": ""
                }
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 427,
            "description": "Updates the time since the last 'scratch' event.  What happens is that the audio of the 'scratching' is looped\nIf it detects there have been no new scratches for 50 milliseconds it will pause the audio.\n\nSee startScratchSound",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 468,
            "description": "Returns the flag which indicates if the Audio Engine has downloaded it's source audio.  Only used if Audio Engine\nversion is 1 and we're on a mobile device.  The reason for this is some mobile devices won't automatically buffer\n<audio> or <video> sources to prevent wasting a User's mobile data plan.",
            "return": {
                "description": "Flag indicating if the load is delayed.  If it's true the audio still needs to be loaded",
                "type": "Boolean"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 478,
            "description": "Toggles the state of the audio engine to indicate that the audio resource has been downloaded.",
            "params": [
                {
                    "name": "newValue",
                    "description": "Changes the state of the audio delayed load flag.  If it's true it would suggest the audio\nresource needs to be downloaded.  If it's set to false it would imply the audio resource has been downloaded."
                }
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 487,
            "description": "For Audio Engine version 1.  The ambient sound is triggered after the game has been idle for some time.  By calling\nthis function we are hinting to that callback that user interaction has taken place and the ambient sound should\nbe further delayed.",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 499,
            "description": "Plays the sound when a symbol in the field matches one of the payout symbols.  It flags itself so that multiple matches\nwill not trigger multiple playback events simultaneously.",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 528,
            "description": "Plays the sound for the instant win",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 549,
            "description": "stops all the sounds and triggers the pointed sample",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 562,
            "description": "Plays the sound and prevents the game from triggering any scratch sounds",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 588,
            "description": "Convenience method to tell us if the Audio resource has been loaded.",
            "return": {
                "description": "True if the audio resource has loaded (or technically if canPlayThrough event was received),\notherwise false.",
                "type": "Boolean"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 597,
            "description": "Fallback for mobile device that use the legacy Audio sprite.  A user action is required to trigger the buffer\nof the resource defined by the <audio> tag.",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 610,
            "description": "array that stores references to each of the scratchzones",
            "type": "{Array}",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 616,
            "description": "array that stores references to the symbolgroups",
            "type": "{Array}",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 623,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 624,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 625,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 722,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 723,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 724,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 789,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 790,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game.js",
            "line": 791,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 44,
            "description": "flag to keep track on if the buy message has been sent",
            "type": "{Boolean}",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 50,
            "description": "flag to keep track on if the finish message has been sent",
            "type": "{Boolean}",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 72,
            "description": "Create a default extendable Client object that handles communicating with the server",
            "return": {
                "description": "extendable object inherits from PGCClass",
                "type": "Object"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 79,
            "description": "URL to access the server",
            "type": "{String}",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 86,
            "description": "Default Query parameters fetched from the URL which was used to load the game",
            "type": "{object}",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 92,
            "description": "mocking contructor function",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 105,
            "description": "Send HTTPRequest to the server",
            "params": [
                {
                    "name": "request",
                    "description": "Object contaning all the key-value pairs being sent to the server",
                    "type": "Object"
                },
                {
                    "name": "ignoreQueryString",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "url",
                    "description": "(Optional) if omitted the default requestURL property will be used",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Promise that has a \"then\" function to declare a listener to deal with the response",
                "type": "Object"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 203,
            "description": "Handling the JSON response comes from the server",
            "params": [
                {
                    "name": "response",
                    "description": "JSON response sent by the server in a String",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 282,
            "description": "Sending the \"buy\" reques to the server",
            "params": [
                {
                    "name": "callback] [optional callback function being invoked when the response is processed",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 311,
            "description": "Sending the \"finish\" request to the server",
            "params": [
                {
                    "name": "callback] [optional callback function being invoked when the response is processed",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 332,
            "description": "Sending the \"heartbeat\" request to the server",
            "params": [
                {
                    "name": "callback] [optional callback function being invoked when the response is processed",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 349,
            "description": "this function will be invoked regardless of the gameState",
            "params": [
                {
                    "name": "responseObject",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 364,
            "description": "default mechanism of processing the \"start\" response",
            "params": [
                {
                    "name": "responseObject",
                    "description": "interpreted JSON object representing the server response",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 372,
            "description": "default mechanism of processing the \"result\" response",
            "params": [
                {
                    "name": "responseObject",
                    "description": "interpreted JSON object representing the server response",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 387,
            "description": "returns true if the buy message has been sent",
            "return": {
                "description": "[description]",
                "type": "Boolean"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 395,
            "description": "returns true if the finish message has been sent",
            "return": {
                "description": "[description]",
                "type": "Boolean"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_client.js",
            "line": 507,
            "description": "Public object",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "line": 36,
            "description": "Extending the list of images are being preloaded during the initialisation process.\nThe object uses the cascade pattern so that you can chain the functions together.",
            "params": [
                {
                    "name": "img",
                    "description": "url pointing to the desired image",
                    "type": "[string]"
                },
                {
                    "name": "crossOrigin",
                    "description": "true if Origin header should be sent to the server",
                    "type": "[boolean]"
                }
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "line": 47,
            "description": "Extending the list of scripts are being preloaded during the initialisation process.\nThe object uses the cascade pattern so that you can chain the functions together.",
            "params": [
                {
                    "name": "script",
                    "description": "URL pointing to the desired image",
                    "type": "[type]"
                }
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "line": 57,
            "description": "Returning with the game specific URL to access the javascript resources",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "line": 65,
            "description": "Returning with the URL pointing to the Scratchomatic javascript resources",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "line": 73,
            "description": "Returning with the game specific URL to access the image resources",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_loader.js",
            "line": 81,
            "description": "Returning with the game specific URL to access the image resources",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 6,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 7,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 8,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 10,
            "description": "Defining the default game states and events",
            "params": [
                {
                    "name": "game",
                    "description": "pgc.Game - namespace for the game",
                    "type": "Object"
                },
                {
                    "name": "toolkit",
                    "description": "PGCUniverse.PGCToolkit - Toolkit for mostly DOM manipulating",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 129,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 130,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 131,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 406,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 407,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 408,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 689,
            "description": "Exposing a function into the window global object to initialise the GameStateMachine\nand to populate it with the desired game logic",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 725,
            "description": "Adding new states or overwriting default states",
            "params": [
                {
                    "name": "state",
                    "description": "idintifier for the state it is desired to access",
                    "type": "String"
                },
                {
                    "name": "stateObj",
                    "description": "Object for declaring the \"enter\" and \"leave\" callbacks",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "void"
            },
            "example": [
                "\npgc.Game.state(\"Init\", {\n    enter: function(){\n        this.default();\n        someSpecificThingsToDo();\n    }\n});"
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/game_states.js",
            "line": 770,
            "description": "Adding new events or overwriting default events",
            "params": [
                {
                    "name": "event",
                    "description": "idintifier for the state it is desired to access",
                    "type": "String"
                },
                {
                    "name": "eventObj",
                    "description": "Object for declaring the \"before\" and \"after\" callbacks and define the transition",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 23,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 24,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 25,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 26,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 52,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 55,
            "description": "Main game logic to collect all the required hooks and callbacks to initialise the game",
            "params": [
                {
                    "name": "window",
                    "description": "global window object",
                    "type": "[object Object]"
                },
                {
                    "name": "document",
                    "description": "reference to the top-most DOMElement object",
                    "type": "[object Object]"
                },
                {
                    "name": "undefined",
                    "description": "[description]",
                    "type": "[undefined]"
                }
            ],
            "return": {
                "description": "",
                "type": "None"
            },
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 123,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 124,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 125,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 144,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 145,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 146,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 165,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 166,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 167,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 175,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 176,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 177,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 241,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 242,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 243,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 341,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 342,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 343,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 359,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 360,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 361,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 383,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 384,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 385,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 399,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 400,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 401,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 408,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 409,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 410,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 411,
            "description": "Generating and exposing a function that can set the current scratching tool on the ScratchController",
            "itemtype": "method",
            "name": "setScratchToolHandler",
            "params": [
                {
                    "name": "scratchBrushSprites",
                    "description": "Array of PGCSprites",
                    "type": "Array"
                }
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 521,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 522,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 523,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 624,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 625,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 626,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 628,
            "description": "If there are no intro popups you can make any one animated element a member of the last-\nintro-animation class",
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 650,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 651,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 652,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 653,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 877,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 878,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 879,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 894,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 895,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 896,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 907,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 908,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 909,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 919,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 920,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 921,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 940,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 941,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 942,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 1006,
            "params": [
                {
                    "name": "elemName",
                    "description": "DOM element to add text to",
                    "type": "String"
                },
                {
                    "name": "stringName",
                    "description": "localised string key",
                    "type": "String"
                },
                {
                    "name": "defaultString",
                    "description": "default string to use if no localised string is available",
                    "type": "String"
                },
                {
                    "name": "surroundWithSpaces",
                    "description": "flag to wrap the string with &nbsp; characters",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 1030,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 1031,
            "class": "",
            "module": "CanvasToolkit"
        },
        {
            "file": "Scratchomatic/scripts/uncompressed/main.js",
            "line": 1032,
            "class": "",
            "module": "CanvasToolkit"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:207"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:220"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:246"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:258"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:271"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:309"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:326"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:386"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:417"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:492"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:428"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:490"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:505"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:526"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:604"
        },
        {
            "message": "unknown tag: propert",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:34"
        },
        {
            "message": "unknown tag: propert",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:283"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:323"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:603"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:612"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:621"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:632"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:650"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:665"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:684"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:725"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:751"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:906"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:948"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:75"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:102"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:141"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:162"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:170"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:178"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:186"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:209"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:226"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:247"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:286"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:311"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:327"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:359"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:375"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:392"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:400"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:408"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:416"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:424"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:466"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:600"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:693"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:721"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:779"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:858"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:875"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:277"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:611"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:627"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:643"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:659"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:724"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:779"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:811"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:819"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:854"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:886"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:894"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:902"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:971"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:992"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1011"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1024"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1038"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1047"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1065"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1080"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1207"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1228"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1236"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1403"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1456"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1545"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1574"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1618"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:1668"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:2003"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:2081"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:2162"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:2185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:98"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:164"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:202"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:211"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/TimeLine.js:220"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/game.js:255"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/game.js:280"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/game.js:468"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " Scratchomatic/scripts/uncompressed/game.js:588"
        },
        {
            "message": "Missing item type\nConverts a non-px font size string (e.g. pt, em) to the value in px, for use in lineWidths etc.",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:133"
        },
        {
            "message": "Missing item type\nPuts all font options together into a string to assign to the canvas",
            "line": " Scratchomatic/scripts/uncompressed/CanvasText.js:169"
        },
        {
            "message": "Missing item type\nReturns the dimensions of a rectangular grid given the contained squares' widths, heights and the padding between each square",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:261"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:279"
        },
        {
            "message": "Missing item type\nGiven a line defined by two points and a third point, returns the point along the line that is closest to the third point\nhttp://stackoverflow.com/questions/3120357/get-closest-point-to-a-line\nhttp://en.wikipedia.org/wiki/Line%E2%80%93line_intersection",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:505"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:604"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/CanvasToolkit.js:632"
        },
        {
            "message": "Missing item type\nGames of this type will trigger a win animation when ALL symbols in the combination are uncovered. Note that this includes instant win symbols - these are effectively a \"match 1\" game.",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:34"
        },
        {
            "message": "Missing item type\nGames of this type never trigger a win animation. Used to display completed games (e.g. Advent)",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:41"
        },
        {
            "message": "Missing item type\nEnumeration type used to set the interaction between a SymbolGroup canvas and its containing element when the container is resized.",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:122"
        },
        {
            "message": "Missing item type\nStores any settings/constants used in scratchomatic",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:150"
        },
        {
            "message": "Missing item type\nSets the sprite used to erase the foil from Symbols during a scratch operation. Brushsprites erase the foil by being drawn to it using the \"destination-out\" globalCompositeOperation.",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:632"
        },
        {
            "message": "Missing item type\nRemoves all games from the game config list.",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:778"
        },
        {
            "message": "Missing item type\nHelper function. Given an array of file names, returns an array of PGCImages to use as scratching masks.",
            "line": " Scratchomatic/scripts/uncompressed/ScratchController.js:867"
        },
        {
            "message": "Missing item type\nChecks for collisions but remembers the rectangles that have been collided with",
            "line": " Scratchomatic/scripts/uncompressed/ScratchMask.js:51"
        },
        {
            "message": "Missing item type\nForces the 'scratched' setting on this mask.",
            "line": " Scratchomatic/scripts/uncompressed/ScratchMask.js:90"
        },
        {
            "message": "Missing item type\nUncrops a part that was previously cropped to the foil. Passes through parts that were never cropped.",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:141"
        },
        {
            "message": "Missing item type\nGets the tap-sensitive bounding box of this symbol, expressed as the coordinates of the symbol's top-left corner, its width and its height.",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:209"
        },
        {
            "message": "Missing item type\nGets the scratch-sensitive bounding box of this symbol, expressed as the coordinates of the symbol's top-left corner, its width and its height.",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:247"
        },
        {
            "message": "Missing item type\nFunction to perform a pulse animation on parts of the symbol",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:466"
        },
        {
            "message": "Missing item type\nFunction to modify the background element",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:580"
        },
        {
            "message": "Missing item type\nFunction to modify the font of the value element",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:600"
        },
        {
            "message": "Missing item type\nFunction to modify the font of the prize element",
            "line": " Scratchomatic/scripts/uncompressed/Symbol.js:625"
        },
        {
            "message": "Missing item type\nSets the title string on a title image sprite.",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:699"
        },
        {
            "message": "Missing item type\nScratches the symbol foils using the provided brushSprite",
            "line": " Scratchomatic/scripts/uncompressed/SymbolGroup.js:2143"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"ready\" state",
            "line": " Scratchomatic/scripts/uncompressed/game.js:27"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"scratchtoolchanged\" state \n(it is triggered when the user changes the selected scratch tool)",
            "line": " Scratchomatic/scripts/uncompressed/game.js:37"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"idle\" state \n(it is triggered when the user hasn't made any interaction in terms of gameplay for a certain amount of time)",
            "line": " Scratchomatic/scripts/uncompressed/game.js:48"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"idlefinish\" state \n(it is triggered when idle state has been interrupted by any sort of user interaction)",
            "line": " Scratchomatic/scripts/uncompressed/game.js:70"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"lastintroanimation\" state \n(it is triggered when the element endowed by the \"last-intro-animation\" class has finished it's animation)",
            "line": " Scratchomatic/scripts/uncompressed/game.js:81"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"lastintroanimation\" state \n(it is triggered when the element endowed by the \"last-intro-animation\" class has finished it's animation)",
            "line": " Scratchomatic/scripts/uncompressed/game.js:92"
        },
        {
            "message": "Missing item type\nAdding listeners to the game's \"scratchtoolchanged\" state\n(it is triggered when the user changes the selected scratch tool)",
            "line": " Scratchomatic/scripts/uncompressed/game.js:103"
        },
        {
            "message": "Missing item type\nAdding function to update the price label inside the game scene",
            "line": " Scratchomatic/scripts/uncompressed/game.js:117"
        },
        {
            "message": "Missing item type\nTriggering an specified event and delegating it to all the subscribed listeners",
            "line": " Scratchomatic/scripts/uncompressed/game.js:129"
        },
        {
            "message": "Missing item type\nInitialises the game audio system.  Note about the versions.  Version 1 refering to the original Audio\nSprite implementation which is effectively a very elaborate wrapper around the <audio> tag.\nVersion 2 refers to the WebAudioAPI requires much less Javascript code to facilitate game audio.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:139"
        },
        {
            "message": "Missing item type\nChecks readyFunc every wait ms until it returns true, then fires callback",
            "line": " Scratchomatic/scripts/uncompressed/game.js:244"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:255"
        },
        {
            "message": "Missing item type\nreturning the appropriate url to the sound resource regarding whether the m4a format is supported or not",
            "line": " Scratchomatic/scripts/uncompressed/game.js:263"
        },
        {
            "message": "Missing item type\nUsed to indicate if the Ambient music is playing.  The primary purpose of this is to prevent the audio engine\nfrom starting playback if the music is already playing.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:280"
        },
        {
            "message": "Missing item type\nBegins playback of the ambient music.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:289"
        },
        {
            "message": "Missing item type\nFades the ambient music out and ends the track\nTODO: fix the easing",
            "line": " Scratchomatic/scripts/uncompressed/game.js:342"
        },
        {
            "message": "Missing item type\nStart the scratching sound.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:368"
        },
        {
            "message": "Missing item type\nCalled on each interval step started by startScratchSound.  Applies the logic to stop the scratching sound if\nit appears as if there hasn't been a scratch for a while.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:404"
        },
        {
            "message": "Missing item type\nUpdates the time since the last 'scratch' event.  What happens is that the audio of the 'scratching' is looped\nIf it detects there have been no new scratches for 50 milliseconds it will pause the audio.\n\nSee startScratchSound",
            "line": " Scratchomatic/scripts/uncompressed/game.js:427"
        },
        {
            "message": "Missing item type\nReturns the flag which indicates if the Audio Engine has downloaded it's source audio.  Only used if Audio Engine\nversion is 1 and we're on a mobile device.  The reason for this is some mobile devices won't automatically buffer\n<audio> or <video> sources to prevent wasting a User's mobile data plan.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:468"
        },
        {
            "message": "Missing item type\nToggles the state of the audio engine to indicate that the audio resource has been downloaded.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:478"
        },
        {
            "message": "Missing item type\nFor Audio Engine version 1.  The ambient sound is triggered after the game has been idle for some time.  By calling\nthis function we are hinting to that callback that user interaction has taken place and the ambient sound should\nbe further delayed.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:487"
        },
        {
            "message": "Missing item type\nPlays the sound when a symbol in the field matches one of the payout symbols.  It flags itself so that multiple matches\nwill not trigger multiple playback events simultaneously.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:499"
        },
        {
            "message": "Missing item type\nPlays the sound for the instant win",
            "line": " Scratchomatic/scripts/uncompressed/game.js:528"
        },
        {
            "message": "Missing item type\nstops all the sounds and triggers the pointed sample",
            "line": " Scratchomatic/scripts/uncompressed/game.js:549"
        },
        {
            "message": "Missing item type\nPlays the sound and prevents the game from triggering any scratch sounds",
            "line": " Scratchomatic/scripts/uncompressed/game.js:562"
        },
        {
            "message": "Missing item type\nConvenience method to tell us if the Audio resource has been loaded.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:588"
        },
        {
            "message": "Missing item type\nFallback for mobile device that use the legacy Audio sprite.  A user action is required to trigger the buffer\nof the resource defined by the <audio> tag.",
            "line": " Scratchomatic/scripts/uncompressed/game.js:597"
        },
        {
            "message": "Missing item type\narray that stores references to each of the scratchzones",
            "line": " Scratchomatic/scripts/uncompressed/game.js:610"
        },
        {
            "message": "Missing item type\narray that stores references to the symbolgroups",
            "line": " Scratchomatic/scripts/uncompressed/game.js:616"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:623"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:624"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:625"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:722"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:723"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:724"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:789"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:790"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game.js:791"
        },
        {
            "message": "Missing item type\nflag to keep track on if the buy message has been sent",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:44"
        },
        {
            "message": "Missing item type\nflag to keep track on if the finish message has been sent",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:50"
        },
        {
            "message": "Missing item type\nCreate a default extendable Client object that handles communicating with the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:72"
        },
        {
            "message": "Missing item type\nURL to access the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:79"
        },
        {
            "message": "Missing item type\nDefault Query parameters fetched from the URL which was used to load the game",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:86"
        },
        {
            "message": "Missing item type\nmocking contructor function",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:92"
        },
        {
            "message": "Missing item type\nSend HTTPRequest to the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:105"
        },
        {
            "message": "Missing item type\nHandling the JSON response comes from the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:203"
        },
        {
            "message": "Missing item type\nSending the \"buy\" reques to the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:282"
        },
        {
            "message": "Missing item type\nSending the \"finish\" request to the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:311"
        },
        {
            "message": "Missing item type\nSending the \"heartbeat\" request to the server",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:332"
        },
        {
            "message": "Missing item type\nthis function will be invoked regardless of the gameState",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:349"
        },
        {
            "message": "Missing item type\ndefault mechanism of processing the \"start\" response",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:364"
        },
        {
            "message": "Missing item type\ndefault mechanism of processing the \"result\" response",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:372"
        },
        {
            "message": "Missing item type\nreturns true if the buy message has been sent",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:387"
        },
        {
            "message": "Missing item type\nreturns true if the finish message has been sent",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:395"
        },
        {
            "message": "Missing item type\nPublic object",
            "line": " Scratchomatic/scripts/uncompressed/game_client.js:507"
        },
        {
            "message": "Missing item type\nExtending the list of images are being preloaded during the initialisation process.\nThe object uses the cascade pattern so that you can chain the functions together.",
            "line": " Scratchomatic/scripts/uncompressed/game_loader.js:36"
        },
        {
            "message": "Missing item type\nExtending the list of scripts are being preloaded during the initialisation process.\nThe object uses the cascade pattern so that you can chain the functions together.",
            "line": " Scratchomatic/scripts/uncompressed/game_loader.js:47"
        },
        {
            "message": "Missing item type\nReturning with the game specific URL to access the javascript resources",
            "line": " Scratchomatic/scripts/uncompressed/game_loader.js:57"
        },
        {
            "message": "Missing item type\nReturning with the URL pointing to the Scratchomatic javascript resources",
            "line": " Scratchomatic/scripts/uncompressed/game_loader.js:65"
        },
        {
            "message": "Missing item type\nReturning with the game specific URL to access the image resources",
            "line": " Scratchomatic/scripts/uncompressed/game_loader.js:73"
        },
        {
            "message": "Missing item type\nReturning with the game specific URL to access the image resources",
            "line": " Scratchomatic/scripts/uncompressed/game_loader.js:81"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:6"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:7"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:8"
        },
        {
            "message": "Missing item type\nDefining the default game states and events",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:10"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:129"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:130"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:131"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:406"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:407"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:408"
        },
        {
            "message": "Missing item type\nExposing a function into the window global object to initialise the GameStateMachine\nand to populate it with the desired game logic",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:689"
        },
        {
            "message": "Missing item type\nAdding new states or overwriting default states",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:725"
        },
        {
            "message": "Missing item type\nAdding new events or overwriting default events",
            "line": " Scratchomatic/scripts/uncompressed/game_states.js:770"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:23"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:24"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:25"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:26"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:52"
        },
        {
            "message": "Missing item type\nMain game logic to collect all the required hooks and callbacks to initialise the game",
            "line": " Scratchomatic/scripts/uncompressed/main.js:55"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:123"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:124"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:125"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:144"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:145"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:146"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:165"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:166"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:167"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:175"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:176"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:177"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:241"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:242"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:243"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:341"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:342"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:343"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:359"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:360"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:361"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:383"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:384"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:385"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:399"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:400"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:401"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:408"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:409"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:410"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:521"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:522"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:523"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:624"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:625"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:626"
        },
        {
            "message": "Missing item type\nIf there are no intro popups you can make any one animated element a member of the last-\nintro-animation class",
            "line": " Scratchomatic/scripts/uncompressed/main.js:628"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:650"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:651"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:652"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:653"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:877"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:878"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:879"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:894"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:895"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:896"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:907"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:908"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:909"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:919"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:920"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:921"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:940"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:941"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:942"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:1006"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:1030"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:1031"
        },
        {
            "message": "Missing item type",
            "line": " Scratchomatic/scripts/uncompressed/main.js:1032"
        }
    ]
}